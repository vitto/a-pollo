{"version":3,"sources":["../../vendors/frontsize-sass/core/core.scss","../../vendors/frontsize-sass/core/base/base.scss","../../vendors/frontsize-sass/core/prefixes/box.scss","widgets/header/miniml-header-button.scss","../../vendors/frontsize-sass/core/grids/float-grid.scss","vars.scss","../../vendors/frontsize-sass/core/functions.scss","config.scss","widgets/header/miniml-header.scss","../../vendors/frontsize-sass/core/functions/ease.scss","../../vendors/frontsize-sass/core/components/bem.scss","widgets/index/miniml-map-dot.scss","widgets/index/miniml-map.scss","../../vendors/frontsize-sass/core/helpers/table.scss","widgets/index/miniml-snippet-example-preview.scss","mixin/arrow.scss","../../vendors/frontsize-sass/core/helpers/background.scss","widgets/index/miniml-tip.scss","widgets/miniml-a-pollo-release.scss","../../vendors/frontsize-sass/core/helpers/sizing.scss","widgets/miniml-body.scss","widgets/miniml-logo.scss","widgets/miniml-main.scss","widgets/miniml-markdown.scss","widgets/miniml.scss","../../vendors/frontsize-sass/core/helpers/font.scss","app.scss","../../vendors/frontsize-sass/core/prefixes/selection.scss","../../vendors/frontsize-sass/core/helpers/compatibility.scss","../../vendors/frontsize-sass/core/components/private.scss","../../vendors/frontsize-sass/core/components/sizing.scss"],"names":[],"mappings":"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","file":"frontsize.miniml.css","sourcesContent":["/*!\nFrontsize: http://frontsize.com\nGitHub:    https://github.com/ideatosrl/frontsize-sass\nLicense:   MIT Licence\nVersion:   3.12.68\nDate:      2016-03-08T15:22:51+01:00\nAuthors:   Vittorio Vittori, Alessandro Minoccheri\n*/\n\n@charset \"UTF-8\";\n\n@import \"defaults\";\n@import \"vars\";\n\n@import \"functions\";\n@import \"functions/ease\";\n\n@import \"grids/flex-grid\";\n@import \"grids/float-grid\";\n@import \"grids/grid\";\n@import \"grids/text-column-grid\";\n@import \"components/public\";\n@import \"components/private\";\n@import \"components/bem-expressive\";\n@import \"components/bem\";\n@import \"components/margin\";\n@import \"prefixes/animation\";\n@import \"prefixes/background\";\n@import \"prefixes/border\";\n@import \"prefixes/box\";\n@import \"prefixes/column\";\n@import \"prefixes/display\";\n@import \"prefixes/filter\";\n@import \"prefixes/flex\";\n@import \"prefixes/font\";\n@import \"prefixes/form\";\n@import \"prefixes/grid\";\n@import \"prefixes/image\";\n@import \"prefixes/outline\";\n@import \"prefixes/placeholder\";\n@import \"prefixes/print\";\n@import \"prefixes/selection\";\n@import \"prefixes/text\";\n@import \"prefixes/transform\";\n@import \"prefixes/transition\";\n@import \"prefixes/visibility\";\n\n@import \"helpers/background\";\n@import \"helpers/background-retina\";\n@import \"helpers/border\";\n@import \"helpers/color\";\n@import \"helpers/compatibility\";\n@import \"helpers/filter\";\n@import \"helpers/font\";\n@import \"helpers/positioning\";\n@import \"helpers/sizing\";\n@import \"helpers/sprite-retina\";\n@import \"helpers/sprite\";\n@import \"helpers/table\";\n@import \"helpers/text\";\n@import \"helpers/transform\";\n\n@import \"components/padding\";\n@import \"components/typography\";\n@import \"components/sizing\";\n@import \"components/print\";\n\n@import \"base/base\";\n\n@import \"state/margin\";\n@import \"state/padding\";\n@import \"state/print\";\n@import \"state/positioning\";\n@import \"state/sizing\";\n@import \"state/state\";\n@import \"state/table\";\n@import \"state/text\";\n@import \"state/visibility\";\n","@if $use-core-base == true {\n\n    * {\n        @include box-sizing(\"border-box\");\n    }\n\n    body {\n        margin: 0;\n        padding: 0;\n        position: relative;\n    }\n\n    span,\n    div,\n    b,\n    strong {\n        &[title] {\n            cursor: help;\n            &:hover {\n                text-decoration: underline;\n            }\n        }\n    }\n\n    a[title],\n    a strong[title],\n    a span[title],\n    a div[title],\n    a b[title] {\n        cursor: pointer;\n    }\n\n    p,\n    blockquote,\n    dl, dt, dd,\n    figure,\n    figcaption,\n    div,\n    hr,\n    article,\n    nav,\n    aside,\n    main,\n    section,\n    header,\n    footer,\n    h1, h2, h3, h4, h5, h6\n    hgroup,\n    address {\n        margin:0;\n        padding:0;\n    }\n\n    ul {\n        text-align: left;\n    }\n\n    nav {\n        ul {\n            list-style-type: none;\n            padding: 0;\n            li {\n                margin-left:0;\n            }\n        }\n    }\n}\n","@mixin box-align($align:stretch) {\n    // The box-align property specifies how to align the child elements of a box.\n    // Url - http://www.w3schools.com/cssref/css3_pr_box-align.asp\n    // Values: start | end | center | baseline | stretch\n    @if $use-css-prefix == true {\n        -webkit-box-align: #{$align};\n        -khtml-box-align: #{$align};\n        -moz-box-align: #{$align};\n        -ms-box-align: #{$align};\n        -o-box-align: #{$align};\n    }\n    box-align: #{$align};\n}\n\n@mixin box-direction($direction:normal) {\n    // The box-direction property specifies the direction in which child elements of a box element are laid out.\n    // Url - http://www.w3schools.com/cssref/css3_pr_box-direction.asp\n    // Values: normal | reverse | inherit\n    @if $use-css-prefix == true {\n        -webkit-box-direction: #{$direction};\n        -khtml-box-direction: #{$direction};\n        -moz-box-direction: #{$direction};\n        -ms-box-direction: #{$direction};\n        -o-box-direction: #{$direction};\n    }\n    box-direction: #{$direction};\n}\n\n@mixin box-flex($flexibility:0.0) {\n    // The box-flex property specifies whether the child elements of a box is flexible or inflexible in size.\n    // Tip: Elements that are flexible can shrink or grow as the box shrinks and grows. Whenever there is extra space in a box, flexible elements are expanded to fill that space.\n    // Values: 0.0 | 0.5 | 1 | etc.\n    // Notice: The container element must have display property set to box as in the example above\n    // .container {\n    //     .display-box();\n    //     .children {\n    //         .box-flex();\n    //     }\n    // }\n    @if $use-css-prefix == true {\n        -webkit-box-flex: #{$flexibility};\n        -khtml-box-flex: #{$flexibility};\n        -moz-box-flex: #{$flexibility};\n        -ms-box-flex: #{$flexibility};\n        -o-box-flex: #{$flexibility};\n    }\n    box-flex: #{$flexibility};\n}\n\n@mixin box-ordinal-group($order:1) {\n    // Url - http://www.w3schools.com/cssref/css3_pr_box-ordinal-group.asp\n    // The box-ordinal-group property specifies the display order of the child elements of a box.\n    // Elements with a lower value are displayed before those with a higher value.\n    // Note: The display order of the elements with the same group value depend on their source order.\n    // Values: integers\n    // Notice: The container element must have display property set to box as in the example above\n    // .container {\n    //     .display-box();\n    //     .children-1 {\n    //         .box-ordinal-group(2);\n    //     }\n    //     .children-2 {\n    //         .box-ordinal-group(1);\n    //     }\n    // }\n    @if $use-css-prefix == true {\n        -webkit-box-ordinal-group: #{$order};\n        -khtml-box-ordinal-group: #{$order};\n        -moz-box-ordinal-group: #{$order};\n        -ms-box-ordinal-group: #{$order};\n        -o-box-ordinal-group: #{$order};\n        -ms-flex-order: #{$order};\n    }\n    box-ordinal-group: #{$order};\n}\n\n@mixin box-orient($orient:inline-axis) {\n    // Url - http://www.w3schools.com/cssref/css3_pr_box-orient.asp\n    // The box-orient property specifies whether the children of a box should be laid out horizontally or vertically.\n    // Tip: Children within a horizontal box are displayed from left to right, and children within a vertical box are displayed top to bottom. However, the box-direction and box-ordinal-group properties can change this ordering.\n    // Values: horizontal | vertical | inline-axis | block-axis | inherit\n    // Notice: The container element must have display property set to box as in the example above\n    // .container {\n    //     .display-box();\n    //     .children-1 {\n    //         .box-ordinal-group(2);\n    //     }\n    //     .children-2 {\n    //         .box-ordinal-group(1);\n    //     }\n    // }\n    @if $use-css-prefix == true {\n        -webkit-box-orient: #{$orient};\n        -khtml-box-orient: #{$orient};\n        -moz-box-orient: #{$orient};\n        -ms-flex-orient: #{$orient};\n        -ms-box-orient: #{$orient};\n        -o-box-orient: #{$orient};\n    }\n    box-orient: #{$orient};\n}\n\n@mixin box-pack($pack) {\n    // Url - http://www.w3schools.com/cssref/css3_pr_box-pack.asp\n    // The box-pack property specifies where child elements of a box are placed when the box is larger than the size of the children.\n    // This property specifies the horizontal position in horizontal boxes, and the vertical position in vertical boxes.\n    // Values: start | end | center | justify\n    // Notice: The container element must have display property set to box as in the example above\n    // .container {\n    //     .displayBox();\n    //     .children-1 {\n    //         .box-ordinal-group(2);\n    //     }\n    //     .children-2 {\n    //         .box-ordinal-group(1);\n    //     }\n    // }\n    @if $use-css-prefix == true {\n        -webkit-box-pack: #{$pack};\n        -khtml-box-pack: #{$pack};\n        -moz-box-pack: #{$pack};\n        -ms-flex-pack: #{$pack};\n        -ms-box-pack: #{$pack};\n        -o-box-pack: #{$pack};\n    }\n    box-pack: #{$pack};\n}\n\n@mixin box-sizing($sizing:content-box) {\n    // Url - http://www.w3schools.com/cssref/css3_pr_box-sizing.asp\n    // The box-sizing property allows you to define certain elements to fit an area in a certain way.\n    // For example, if you want two bordered boxes side by side, it can be achieved through setting box-sizing to \"border-box\". This forces the browser to render the box with the specified width and height, and place the border and padding inside the box.\n    // Values: content-box | border-box | inherit\n    @if $use-css-prefix == true {\n        -webkit-box-sizing: #{$sizing};\n        -khtml-box-sizing: #{$sizing};\n        -moz-box-sizing: #{$sizing};\n        -ms-box-sizing: #{$sizing};\n        -o-box-sizing: #{$sizing};\n    }\n    box-sizing: #{$sizing};\n}\n\n@mixin box-shadow($params:0 0 1px rgba(0,0,0,.3)) {\n    // Sets the shadow of the element\n    // .box-shadow(x y blur [expand] color [inset]);\n    // .box-shadow(1px 2px 4px rgba(0,0,0,.3));\n    // .box-shadow(0px 2px 4px -1px rgba(0,0,0,.3), inset 0px 1px 4px rgba(255,255,255,.5););\n    @if $use-css-prefix == true {\n        -webkit-box-shadow: #{$params};\n        -khtml-box-shadow: #{$params};\n        -moz-box-shadow: #{$params};\n        -ms-box-shadow: #{$params};\n        -o-box-shadow: #{$params};\n    }\n    box-shadow: #{$params};\n}",".miniml-header-button {\n\n  @include column(3, 3, 3);\n\n  background-color: $color-background-page;\n  display: block;\n  height: $height-header;\n  padding: s();\n\n  &:hover,\n  &:focus {\n    background-color: $color-text;\n    color: $color-background-page;\n  }\n}\n","/// Generates a container for the float grid system\n/// @author <a href=\"http://twitter.com/vttrx\">Vittorio Vittori</a>\n/// @group Grids - Float grid\n/// @access public\n/// @param {string} $selector             [row]                   - The selector name of the container\n/// @param {int}    $gainSelector         [gain-margin]           - The selector name of the container with negative margin to gain column padding, if `false` is disabled\n/// @param {int}    $hdFullSteps          [0]                     - Number of columns per row on Full HD\n/// @param {int}    $hdReadySteps         [$hdFullSteps]          - Number of columns per row on HD Ready\n/// @param {int}    $tabletLandscapeSteps [$hdReadySteps]         - Number of columns per row on Tablet landscape\n/// @param {int}    $tabletPortraitSteps  [$tabletLandscapeSteps] - Number of columns per row on Tablet portrait\n/// @param {int}    $mobileLandscapeSteps [1]                     - Number of columns per row on mobile landscape\n/// @param {int}    $mobilePortraitSteps  [1]                     - Number of columns per row on mobile portrait\n/// @example scss Default usage, it generates a `row` selector rule which will NOT treat child elements as columns\n///   @include addFloatGridContainer();\n/// @example css CSS generated\n/// .row,\n/// .row * {\n///   -webkit-box-sizing: border-box;\n///   -khtml-box-sizing: border-box;\n///   -moz-box-sizing: border-box;\n///   -ms-box-sizing: border-box;\n///   -o-box-sizing: border-box;\n///   box-sizing: border-box;\n/// }\n///\n/// .row {\n///   padding-top: 20px;\n///   width: 100%;\n/// }\n/// .row::after {\n///     content: \"\";\n///     display: block;\n///     clear: both;\n/// }\n/// .row--gain-margin {\n///   margin-left: -20px;\n///   margin-right: -20px;\n/// }\n///\n/// @example scss Generates a `row-container` selector rule with 4 HD columns steps, 3 tablet columns steps and 1 column mobile steps\n///   @include addFloatGridContainer(row-container, gain, 4, 4, 3, 3);\n/// @example css CSS generated\n/// .row-container,\n/// .row-container * {\n///   -webkit-box-sizing: border-box;\n///   -khtml-box-sizing: border-box;\n///   -moz-box-sizing: border-box;\n///   -ms-box-sizing: border-box;\n///   -o-box-sizing: border-box;\n///   box-sizing: border-box;\n/// }\n///\n/// .row-container {\n///   padding-top: 20px;\n///   width: 100%;\n/// }\n/// .row-container::after {\n///     content: \"\";\n///     display: block;\n///     clear: both;\n/// }\n/// .row-container--gain {\n///   margin-left: -20px;\n///   margin-right: -20px;\n/// }\n///\n/// .row-container > * {\n///   min-height: 1px;\n///   padding-left: 20px;\n///   padding-right: 20px;\n///   padding-bottom: 20px;\n///   float: left;\n///   position: relative;\n///   width: 25%;\n/// }\n///\n/// \\@media only screen and (min-width: 1px) and (max-width: 479px) {\n///   .row-container > * {\n///     width: 100%;\n///   }\n///   .row-container > *:nth-child(1n+1) {\n///     clear: both;\n///   }\n/// }\n/// \\@media only screen and (min-width: 480px) and (max-width: 767px) {\n///   .row-container > * {\n///     width: 100%;\n///   }\n///   .row-container > *:nth-child(1n+1) {\n///     clear: both;\n///   }\n/// }\n/// \\@media only screen and (min-width: 768px) and (max-width: 1023px), only print {\n///   .row-container > * {\n///     width: 33.33333%;\n///   }\n///   .row-container > *:nth-child(3n+1) {\n///     clear: both;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1024px) and (max-width: 1279px) {\n///   .row-container > * {\n///     width: 33.33333%;\n///   }\n///   .row-container > *:nth-child(3n+1) {\n///     clear: both;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1280px) and (max-width: 1799px) {\n///   .row-container > * {\n///     width: 25%;\n///   }\n///   .row-container > *:nth-child(4n+1) {\n///     clear: both;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1800px) {\n///   .row-container > * {\n///     width: 25%;\n///   }\n///   .row-container > *:nth-child(4n+1) {\n///     clear: both;\n///   }\n/// }\n/// @example scss Generates a `row-container` selector rule with 4 HD columns steps, 3 tablet columns steps, 1 column mobile steps and without padding-top property\n///   @include addFloatGridContainer(row-container, gain, 4, 4, 3, 3, 1, 1, false);\n/// @example css CSS generated\n/// .row-container,\n/// .row-container * {\n///   -webkit-box-sizing: border-box;\n///   -khtml-box-sizing: border-box;\n///   -moz-box-sizing: border-box;\n///   -ms-box-sizing: border-box;\n///   -o-box-sizing: border-box;\n///   box-sizing: border-box;\n/// }\n///\n/// .row-container {\n///   width: 100%;\n/// }\n/// .row-container::after {\n///     content: \"\";\n///     display: block;\n///     clear: both;\n/// }\n/// .row-container--gain {\n///   margin-left: -20px;\n///   margin-right: -20px;\n/// }\n///\n/// .row-container > * {\n///   min-height: 1px;\n///   padding-left: 20px;\n///   padding-right: 20px;\n///   padding-bottom: 20px;\n///   float: left;\n///   position: relative;\n///   width: 25%;\n/// }\n///\n/// \\@media only screen and (min-width: 1px) and (max-width: 479px) {\n///   .row-container > * {\n///     width: 100%;\n///   }\n///   .row-container > *:nth-child(1n+1) {\n///     clear: both;\n///   }\n/// }\n/// \\@media only screen and (min-width: 480px) and (max-width: 767px) {\n///   .row-container > * {\n///     width: 100%;\n///   }\n///   .row-container > *:nth-child(1n+1) {\n///     clear: both;\n///   }\n/// }\n/// \\@media only screen and (min-width: 768px) and (max-width: 1023px), only print {\n///   .row-container > * {\n///     width: 33.33333%;\n///   }\n///   .row-container > *:nth-child(3n+1) {\n///     clear: both;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1024px) and (max-width: 1279px) {\n///   .row-container > * {\n///     width: 33.33333%;\n///   }\n///   .row-container > *:nth-child(3n+1) {\n///     clear: both;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1280px) and (max-width: 1799px) {\n///   .row-container > * {\n///     width: 25%;\n///   }\n///   .row-container > *:nth-child(4n+1) {\n///     clear: both;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1800px) {\n///   .row-container > * {\n///     width: 25%;\n///   }\n///   .row-container > *:nth-child(4n+1) {\n///     clear: both;\n///   }\n/// }\n\n@mixin addFloatGridContainer(\n    $selector             : \"row\",\n    $gainSelector         : \"gain-margin\",\n    $hdFullSteps          : 0,\n    $hdReadySteps         : $hdFullSteps,\n    $tabletLandscapeSteps : $hdReadySteps,\n    $tabletPortraitSteps  : $tabletLandscapeSteps,\n    $mobileLandscapeSteps : 1,\n    $mobilePortraitSteps  : 1,\n    $paddingTop           : $vertical-padding\n    ) {\n\n    @if $use-core-base != true {\n        .#{$selector},\n        .#{$selector} * {\n            @include box-sizing(\"border-box\");\n        }\n    }\n\n    .#{$selector} {\n        width:100%;\n\n        &::after {\n            content: \"\";\n            display: block;\n            clear: both;\n        }\n\n        @if $paddingTop != false {\n            @if $paddingTop != 0 {\n                padding-top:$vertical-padding;\n            }\n        }\n\n        @if $gainSelector != false {\n            @include modifier($gainSelector) {\n                width: auto;\n                margin-left: -(s());\n                margin-right: -(s());\n            }\n        }\n    }\n    @include _checkAutoClear($hdFullSteps, $hdReadySteps, $tabletLandscapeSteps, $tabletPortraitSteps, $mobileLandscapeSteps, $mobilePortraitSteps, $selector);\n}\n\n/// Generates a columns set for the float grid system\n/// @author <a href=\"http://twitter.com/vttrx\">Vittorio Vittori</a>\n/// @group Grids - Float grid\n/// @access public\n/// @param {int}     $hdSteps              [12]                  - Column steps for HD viewports\n/// @param {int}     $tabletSteps          [$hdSteps]            - Column steps for Tablet viewports\n/// @param {int}     $mobileSteps          [$tabletSteps]        - Column steps for Mobile viewports\n/// @param {string}  $hdViewportPrefix     [\"hd-\"]               - Columns rule HD viewport prefix\n/// @param {string}  $tabletViewportPrefix [\"tablet-\"]           - Columns rule Tablet viewport prefix\n/// @param {string}  $mobileViewportPrefix [\"mobile-\"]           - Columns rule Mobile viewport prefix\n/// @param {string}  $fillFromViewport     [\"mobile-landscape\"]  - The viewport step where columns will be set to `width:100%`\n/// @param {boolean} $viewTotalColumns     [true]                - Choose to see or not to see total columns at the end of the rule name\n/// @param {int}     $columnsSeparator     [\"-of-\"]              - Columns separator, only applied if `$viewTotalColumns` is `true`\n/// @param {int}     $useHdRules           [true]                - Allows HD viewports rules to be generated\n/// @param {int}     $useTabletRules       [true]                - Allows Tablet viewports rules to be generated\n/// @param {int}     $useMobileRules       [true]                - Allows Mobile viewports rules to be generated\n/// @example scss Default usage, it generates a 4 column set for every viewport\n///   @include addFloatGridColumns(4);\n/// @example css A simple 4 column set\n/// \\@media only screen and (min-width: 1px) {\n///   .hd-4-of-4 {\n///     width: 100%;\n///   }\n///\n///   .hd-3-of-4 {\n///     width: 75%;\n///   }\n///\n///   .hd-2-of-4 {\n///     width: 50%;\n///   }\n///\n///   .hd-1-of-4 {\n///     width: 25%;\n///   }\n///\n///   .hd-4-of-4, .hd-3-of-4, .hd-2-of-4, .hd-1-of-4 {\n///     padding-left: 20px;\n///     padding-right: 20px;\n///     padding-bottom: 20px;\n///     float: left;\n///     position: relative;\n///     -webkit-box-sizing: border-box;\n///     -khtml-box-sizing: border-box;\n///     -moz-box-sizing: border-box;\n///     -ms-box-sizing: border-box;\n///     -o-box-sizing: border-box;\n///     box-sizing: border-box;\n///   }\n///\n///   .tablet-4-of-4 {\n///     width: 100%;\n///   }\n///\n///   .tablet-3-of-4 {\n///     width: 75%;\n///   }\n///\n///   .tablet-2-of-4 {\n///     width: 50%;\n///   }\n///\n///   .tablet-1-of-4 {\n///     width: 25%;\n///   }\n///\n///   .tablet-4-of-4, .tablet-3-of-4, .tablet-2-of-4, .tablet-1-of-4 {\n///     padding-left: 20px;\n///     padding-right: 20px;\n///     padding-bottom: 20px;\n///     float: left;\n///     position: relative;\n///     -webkit-box-sizing: border-box;\n///     -khtml-box-sizing: border-box;\n///     -moz-box-sizing: border-box;\n///     -ms-box-sizing: border-box;\n///     -o-box-sizing: border-box;\n///     box-sizing: border-box;\n///   }\n///\n///   .mobile-4-of-4 {\n///     width: 100%;\n///   }\n///\n///   .mobile-3-of-4 {\n///     width: 75%;\n///   }\n///\n///   .mobile-2-of-4 {\n///     width: 50%;\n///   }\n///\n///   .mobile-1-of-4 {\n///     width: 25%;\n///   }\n///\n///   .mobile-4-of-4, .mobile-3-of-4, .mobile-2-of-4, .mobile-1-of-4 {\n///     padding-left: 20px;\n///     padding-right: 20px;\n///     padding-bottom: 20px;\n///     float: left;\n///     position: relative;\n///     -webkit-box-sizing: border-box;\n///     -khtml-box-sizing: border-box;\n///     -moz-box-sizing: border-box;\n///     -ms-box-sizing: border-box;\n///     -o-box-sizing: border-box;\n///     box-sizing: border-box;\n///   }\n/// }\n/// \\@media only screen and (min-width: 768px), only print {\n///   .mobile-4-of-4 {\n///     width: 100%;\n///   }\n///\n///   .mobile-3-of-4 {\n///     width: 75%;\n///   }\n///\n///   .mobile-2-of-4 {\n///     width: 50%;\n///   }\n///\n///   .mobile-1-of-4 {\n///     width: 25%;\n///   }\n///\n///   .mobile-4-of-4, .mobile-3-of-4, .mobile-2-of-4, .mobile-1-of-4 {\n///     padding-left: 20px;\n///     padding-right: 20px;\n///     padding-bottom: 20px;\n///     float: left;\n///     position: relative;\n///     -webkit-box-sizing: border-box;\n///     -khtml-box-sizing: border-box;\n///     -moz-box-sizing: border-box;\n///     -ms-box-sizing: border-box;\n///     -o-box-sizing: border-box;\n///     box-sizing: border-box;\n///   }\n///\n///   .hd-4-of-4 {\n///     width: 100%;\n///   }\n///\n///   .hd-3-of-4 {\n///     width: 75%;\n///   }\n///\n///   .hd-2-of-4 {\n///     width: 50%;\n///   }\n///\n///   .hd-1-of-4 {\n///     width: 25%;\n///   }\n///\n///   .hd-4-of-4, .hd-3-of-4, .hd-2-of-4, .hd-1-of-4 {\n///     padding-left: 20px;\n///     padding-right: 20px;\n///     padding-bottom: 20px;\n///     float: left;\n///     position: relative;\n///     -webkit-box-sizing: border-box;\n///     -khtml-box-sizing: border-box;\n///     -moz-box-sizing: border-box;\n///     -ms-box-sizing: border-box;\n///     -o-box-sizing: border-box;\n///     box-sizing: border-box;\n///   }\n///\n///   .tablet-4-of-4 {\n///     width: 100%;\n///   }\n///\n///   .tablet-3-of-4 {\n///     width: 75%;\n///   }\n///\n///   .tablet-2-of-4 {\n///     width: 50%;\n///   }\n///\n///   .tablet-1-of-4 {\n///     width: 25%;\n///   }\n///\n///   .tablet-4-of-4, .tablet-3-of-4, .tablet-2-of-4, .tablet-1-of-4 {\n///     padding-left: 20px;\n///     padding-right: 20px;\n///     padding-bottom: 20px;\n///     float: left;\n///     position: relative;\n///     -webkit-box-sizing: border-box;\n///     -khtml-box-sizing: border-box;\n///     -moz-box-sizing: border-box;\n///     -ms-box-sizing: border-box;\n///     -o-box-sizing: border-box;\n///     box-sizing: border-box;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1280px) {\n///   .mobile-4-of-4 {\n///     width: 100%;\n///   }\n///\n///   .mobile-3-of-4 {\n///     width: 75%;\n///   }\n///\n///   .mobile-2-of-4 {\n///     width: 50%;\n///   }\n///\n///   .mobile-1-of-4 {\n///     width: 25%;\n///   }\n///\n///   .mobile-4-of-4, .mobile-3-of-4, .mobile-2-of-4, .mobile-1-of-4 {\n///     padding-left: 20px;\n///     padding-right: 20px;\n///     padding-bottom: 20px;\n///     float: left;\n///     position: relative;\n///     -webkit-box-sizing: border-box;\n///     -khtml-box-sizing: border-box;\n///     -moz-box-sizing: border-box;\n///     -ms-box-sizing: border-box;\n///     -o-box-sizing: border-box;\n///     box-sizing: border-box;\n///   }\n///\n///   .tablet-4-of-4 {\n///     width: 100%;\n///   }\n///\n///   .tablet-3-of-4 {\n///     width: 75%;\n///   }\n///\n///   .tablet-2-of-4 {\n///     width: 50%;\n///   }\n///\n///   .tablet-1-of-4 {\n///     width: 25%;\n///   }\n///\n///   .tablet-4-of-4, .tablet-3-of-4, .tablet-2-of-4, .tablet-1-of-4 {\n///     padding-left: 20px;\n///     padding-right: 20px;\n///     padding-bottom: 20px;\n///     float: left;\n///     position: relative;\n///     -webkit-box-sizing: border-box;\n///     -khtml-box-sizing: border-box;\n///     -moz-box-sizing: border-box;\n///     -ms-box-sizing: border-box;\n///     -o-box-sizing: border-box;\n///     box-sizing: border-box;\n///   }\n///\n///   .hd-4-of-4 {\n///     width: 100%;\n///   }\n///\n///   .hd-3-of-4 {\n///     width: 75%;\n///   }\n///\n///   .hd-2-of-4 {\n///     width: 50%;\n///   }\n///\n///   .hd-1-of-4 {\n///     width: 25%;\n///   }\n///\n///   .hd-4-of-4, .hd-3-of-4, .hd-2-of-4, .hd-1-of-4 {\n///     padding-left: 20px;\n///     padding-right: 20px;\n///     padding-bottom: 20px;\n///     float: left;\n///     position: relative;\n///     -webkit-box-sizing: border-box;\n///     -khtml-box-sizing: border-box;\n///     -moz-box-sizing: border-box;\n///     -ms-box-sizing: border-box;\n///     -o-box-sizing: border-box;\n///     box-sizing: border-box;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1px) and (max-width: 767px) {\n///   .mobile-clear {\n///     clear: both;\n///   }\n/// }\n/// \\@media only screen and (min-width: 768px) and (max-width: 1279px), only print {\n///   .tablet-clear {\n///     clear: both;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1280px) {\n///   .hd-clear {\n///     clear: both;\n///   }\n/// }\n/// \\@media only screen and (max-width: 767px) {\n///   .tablet-4-of-4, .tablet-3-of-4, .tablet-2-of-4, .tablet-1-of-4 {\n///     width: 100%;\n///   }\n/// }\n/// \\@media only screen and (max-width: 767px) {\n///   .hd-4-of-4, .hd-3-of-4, .hd-2-of-4, .hd-1-of-4 {\n///     width: 100%;\n///   }\n/// }\n/// \\@media only screen and (max-width: 767px) {\n///   .mobile-4-of-4 {\n///     width: 100%;\n///   }\n///\n///   .mobile-3-of-4 {\n///     width: 75%;\n///   }\n///\n///   .mobile-2-of-4 {\n///     width: 50%;\n///   }\n///\n///   .mobile-1-of-4 {\n///     width: 25%;\n///   }\n/// }\n/// @example scss Default usage, it generates a 4 column set for every viewport\n///   @include addFloatGridColumns(4, 2, 2, \"l\", \"m\", \"s\", \"mobile-landscape\", false);\n/// @example css Generated result for different grids steps by viewport and without total steps counter\n/// \\@media only screen and (min-width: 1px) {\n///   .l4 {\n///     width: 100%;\n///   }\n///\n///   .l3 {\n///     width: 75%;\n///   }\n///\n///   .l2 {\n///     width: 50%;\n///   }\n///\n///   .l1 {\n///     width: 25%;\n///   }\n///\n///   .l4, .l3, .l2, .l1 {\n///     padding-left: 20px;\n///     padding-right: 20px;\n///     padding-bottom: 20px;\n///     float: left;\n///     position: relative;\n///     -webkit-box-sizing: border-box;\n///     -khtml-box-sizing: border-box;\n///     -moz-box-sizing: border-box;\n///     -ms-box-sizing: border-box;\n///     -o-box-sizing: border-box;\n///     box-sizing: border-box;\n///   }\n///\n///   .m2 {\n///     width: 100%;\n///   }\n///\n///   .m1 {\n///     width: 50%;\n///   }\n///\n///   .m2, .m1 {\n///     padding-left: 20px;\n///     padding-right: 20px;\n///     padding-bottom: 20px;\n///     float: left;\n///     position: relative;\n///     -webkit-box-sizing: border-box;\n///     -khtml-box-sizing: border-box;\n///     -moz-box-sizing: border-box;\n///     -ms-box-sizing: border-box;\n///     -o-box-sizing: border-box;\n///     box-sizing: border-box;\n///   }\n///\n///   .s2 {\n///     width: 100%;\n///   }\n///\n///   .s1 {\n///     width: 50%;\n///   }\n///\n///   .s2, .s1 {\n///     padding-left: 20px;\n///     padding-right: 20px;\n///     padding-bottom: 20px;\n///     float: left;\n///     position: relative;\n///     -webkit-box-sizing: border-box;\n///     -khtml-box-sizing: border-box;\n///     -moz-box-sizing: border-box;\n///     -ms-box-sizing: border-box;\n///     -o-box-sizing: border-box;\n///     box-sizing: border-box;\n///   }\n/// }\n/// \\@media only screen and (min-width: 768px), only print {\n///   .s2 {\n///     width: 100%;\n///   }\n///\n///   .s1 {\n///     width: 50%;\n///   }\n///\n///   .s2, .s1 {\n///     padding-left: 20px;\n///     padding-right: 20px;\n///     padding-bottom: 20px;\n///     float: left;\n///     position: relative;\n///     -webkit-box-sizing: border-box;\n///     -khtml-box-sizing: border-box;\n///     -moz-box-sizing: border-box;\n///     -ms-box-sizing: border-box;\n///     -o-box-sizing: border-box;\n///     box-sizing: border-box;\n///   }\n///\n///   .l4 {\n///     width: 100%;\n///   }\n///\n///   .l3 {\n///     width: 75%;\n///   }\n///\n///   .l2 {\n///     width: 50%;\n///   }\n///\n///   .l1 {\n///     width: 25%;\n///   }\n///\n///   .l4, .l3, .l2, .l1 {\n///     padding-left: 20px;\n///     padding-right: 20px;\n///     padding-bottom: 20px;\n///     float: left;\n///     position: relative;\n///     -webkit-box-sizing: border-box;\n///     -khtml-box-sizing: border-box;\n///     -moz-box-sizing: border-box;\n///     -ms-box-sizing: border-box;\n///     -o-box-sizing: border-box;\n///     box-sizing: border-box;\n///   }\n///\n///   .m2 {\n///     width: 100%;\n///   }\n///\n///   .m1 {\n///     width: 50%;\n///   }\n///\n///   .m2, .m1 {\n///     padding-left: 20px;\n///     padding-right: 20px;\n///     padding-bottom: 20px;\n///     float: left;\n///     position: relative;\n///     -webkit-box-sizing: border-box;\n///     -khtml-box-sizing: border-box;\n///     -moz-box-sizing: border-box;\n///     -ms-box-sizing: border-box;\n///     -o-box-sizing: border-box;\n///     box-sizing: border-box;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1280px) {\n///   .s2 {\n///     width: 100%;\n///   }\n///\n///   .s1 {\n///     width: 50%;\n///   }\n///\n///   .s2, .s1 {\n///     padding-left: 20px;\n///     padding-right: 20px;\n///     padding-bottom: 20px;\n///     float: left;\n///     position: relative;\n///     -webkit-box-sizing: border-box;\n///     -khtml-box-sizing: border-box;\n///     -moz-box-sizing: border-box;\n///     -ms-box-sizing: border-box;\n///     -o-box-sizing: border-box;\n///     box-sizing: border-box;\n///   }\n///\n///   .m2 {\n///     width: 100%;\n///   }\n///\n///   .m1 {\n///     width: 50%;\n///   }\n///\n///   .m2, .m1 {\n///     padding-left: 20px;\n///     padding-right: 20px;\n///     padding-bottom: 20px;\n///     float: left;\n///     position: relative;\n///     -webkit-box-sizing: border-box;\n///     -khtml-box-sizing: border-box;\n///     -moz-box-sizing: border-box;\n///     -ms-box-sizing: border-box;\n///     -o-box-sizing: border-box;\n///     box-sizing: border-box;\n///   }\n///\n///   .l4 {\n///     width: 100%;\n///   }\n///\n///   .l3 {\n///     width: 75%;\n///   }\n///\n///   .l2 {\n///     width: 50%;\n///   }\n///\n///   .l1 {\n///     width: 25%;\n///   }\n///\n///   .l4, .l3, .l2, .l1 {\n///     padding-left: 20px;\n///     padding-right: 20px;\n///     padding-bottom: 20px;\n///     float: left;\n///     position: relative;\n///     -webkit-box-sizing: border-box;\n///     -khtml-box-sizing: border-box;\n///     -moz-box-sizing: border-box;\n///     -ms-box-sizing: border-box;\n///     -o-box-sizing: border-box;\n///     box-sizing: border-box;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1px) and (max-width: 767px) {\n///   .sclear {\n///     clear: both;\n///   }\n/// }\n/// \\@media only screen and (min-width: 768px) and (max-width: 1279px), only print {\n///   .mclear {\n///     clear: both;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1280px) {\n///   .lclear {\n///     clear: both;\n///   }\n/// }\n/// \\@media only screen and (max-width: 767px) {\n///   .m2, .m1 {\n///     width: 100%;\n///   }\n/// }\n/// \\@media only screen and (max-width: 767px) {\n///   .l4, .l3, .l2, .l1 {\n///     width: 100%;\n///   }\n/// }\n/// \\@media only screen and (max-width: 767px) {\n///   .s2 {\n///     width: 100%;\n///   }\n///\n///   .s1 {\n///     width: 50%;\n///   }\n/// }\n\n@mixin addFloatGridColumns(\n    $hdSteps              : 12,\n    $tabletSteps          : $hdSteps,\n    $mobileSteps          : $tabletSteps,\n    $hdViewportPrefix     : \"hd-\",\n    $tabletViewportPrefix : \"tablet-\",\n    $mobileViewportPrefix : \"mobile-\",\n    $fillFromViewport     : \"mobile-landscape\",\n    $viewTotalColumns     : true,\n    $columnsSeparator     : \"-of-\",\n    $useHdRules           : true,\n    $useTabletRules       : true,\n    $useMobileRules       : true\n    ) {\n\n        @media #{$from-mobile-portrait} {\n            // mobile portrait\n            @if $useHdRules == true {\n                @include _addFloatGridColumnSet($hdViewportPrefix, $hdSteps, $viewTotalColumns, $columnsSeparator);\n            }\n            @if $useTabletRules == true {\n                @include _addFloatGridColumnSet($tabletViewportPrefix, $tabletSteps, $viewTotalColumns, $columnsSeparator);\n            }\n            @if $useMobileRules == true {\n                @include _addFloatGridColumnSet($mobileViewportPrefix, $mobileSteps, $viewTotalColumns, $columnsSeparator);\n            }\n        }\n\n        @media #{$from-tablet-portrait} {\n            // Tablet portrait\n            @if $useMobileRules == true {\n                @include _addFloatGridColumnSet($mobileViewportPrefix, $mobileSteps, $viewTotalColumns, $columnsSeparator);\n            }\n            @if $useHdRules == true {\n                @include _addFloatGridColumnSet($hdViewportPrefix, $hdSteps, $viewTotalColumns, $columnsSeparator);\n            }\n            @if $useTabletRules == true {\n                @include _addFloatGridColumnSet($tabletViewportPrefix, $tabletSteps, $viewTotalColumns, $columnsSeparator);\n            }\n        }\n\n        @media #{$from-hd-ready} {\n            // HD Ready\n            @if $useMobileRules == true {\n                @include _addFloatGridColumnSet($mobileViewportPrefix, $mobileSteps, $viewTotalColumns, $columnsSeparator);\n            }\n            @if $useTabletRules == true {\n                @include _addFloatGridColumnSet($tabletViewportPrefix, $tabletSteps, $viewTotalColumns, $columnsSeparator);\n            }\n            @if $useHdRules == true {\n                @include _addFloatGridColumnSet($hdViewportPrefix, $hdSteps, $viewTotalColumns, $columnsSeparator);\n            }\n        }\n\n    @if $useMobileRules == true {\n        @include _addClearRule($only-mobile, $mobileViewportPrefix);\n    }\n\n    @if $useTabletRules == true {\n        @include _addClearRule($only-tablet, $tabletViewportPrefix);\n    }\n\n    @if $useHdRules == true {\n        @include _addClearRule($only-hd, $hdViewportPrefix);\n    }\n\n    @if $useTabletRules == true {\n        @include _addFillToColumnSet($tabletViewportPrefix, $tabletSteps, $fillFromViewport, $viewTotalColumns, $columnsSeparator);\n    }\n\n    @if $useHdRules == true {\n        @include _addFillToColumnSet($hdViewportPrefix, $hdSteps, $fillFromViewport, $viewTotalColumns, $columnsSeparator);\n    }\n\n    @if $useMobileRules == true {\n        @include _preventMobileColumnSet($mobileViewportPrefix, $mobileSteps, $viewTotalColumns, $columnsSeparator);\n    }\n}\n\n@mixin _addClearRule($rule, $prefix) {\n    @media #{$rule} {\n        .#{$prefix}clear {\n            clear: both;\n        }\n    }\n}\n\n/// Apply a column set container for the float grid system to the selector\n/// @author <a href=\"http://twitter.com/vttrx\">Vittorio Vittori</a>\n/// @group Grids - Float grid\n/// @access public\n/// @param {int} $hdFullSteps          [0]                     - Column steps for HD viewports\n/// @param {int} $hdReadySteps         [$hdFullSteps]          - Column steps for HD viewports\n/// @param {int} $tabletLandscapeSteps [$hdReadySteps]         - Column steps for Tablet viewports\n/// @param {int} $tabletPortraitSteps  [$tabletLandscapeSteps] - Column steps for Tablet viewports\n/// @param {int} $mobileLandscapeSteps [1]                     - Column steps for Mobile viewports\n/// @param {int} $mobilePortraitSteps  [1]                     - Column steps for Mobile viewports\n/// @example scss Default usage, it sets a simple column container without rules\n/// .float-grid-example-1 {\n///     @include setFloatGridContainer();\n/// }\n/// @example css A simple 4 column set\n/// .float-grid-example-1 {\n///   width: 100%;\n///   &::after {\n///     content: \"\";\n///     display: block;\n///     clear: both;\n///   }\n///   -webkit-box-sizing: border-box;\n///   -khtml-box-sizing: border-box;\n///   -moz-box-sizing: border-box;\n///   -ms-box-sizing: border-box;\n///   -o-box-sizing: border-box;\n///   box-sizing: border-box;\n/// }\n/// .float-grid-example-1 * {\n///   -webkit-box-sizing: border-box;\n///   -khtml-box-sizing: border-box;\n///   -moz-box-sizing: border-box;\n///   -ms-box-sizing: border-box;\n///   -o-box-sizing: border-box;\n///   box-sizing: border-box;\n/// }\n/// @example scss It sets a column container with column rules which dispose 4 columns childrens on HD viewports and 3 columns children on Tablet viewports\n/// .float-grid-example-2 {\n///     @include setFloatGridContainer(4,4,3,3);\n/// }\n/// @example css The generated CSS\n/// .float-grid-example-2 {\n///   width: 100%;\n///   &::after {\n///     content: \"\";\n///     display: block;\n///     clear: both;\n///   }\n///   -webkit-box-sizing: border-box;\n///   -khtml-box-sizing: border-box;\n///   -moz-box-sizing: border-box;\n///   -ms-box-sizing: border-box;\n///   -o-box-sizing: border-box;\n///   box-sizing: border-box;\n/// }\n/// .float-grid-example-2 * {\n///   -webkit-box-sizing: border-box;\n///   -khtml-box-sizing: border-box;\n///   -moz-box-sizing: border-box;\n///   -ms-box-sizing: border-box;\n///   -o-box-sizing: border-box;\n///   box-sizing: border-box;\n/// }\n/// .float-grid-example-2 > * {\n///   min-height: 1px;\n///   padding-left: 20px;\n///   padding-right: 20px;\n///   padding-bottom: 20px;\n///   float: left;\n///   position: relative;\n///   -webkit-box-sizing: border-box;\n///   -khtml-box-sizing: border-box;\n///   -moz-box-sizing: border-box;\n///   -ms-box-sizing: border-box;\n///   -o-box-sizing: border-box;\n///   box-sizing: border-box;\n///   width: 25%;\n/// }\n/// \\@media only screen and (min-width: 1px) and (max-width: 479px) {\n///   .float-grid-example-2 > * {\n///     width: 100%;\n///   }\n///   .float-grid-example-2 > *:nth-child(1n+1) {\n///     clear: both;\n///   }\n/// }\n/// \\@media only screen and (min-width: 480px) and (max-width: 767px) {\n///   .float-grid-example-2 > * {\n///     width: 100%;\n///   }\n///   .float-grid-example-2 > *:nth-child(1n+1) {\n///     clear: both;\n///   }\n/// }\n/// \\@media only screen and (min-width: 768px) and (max-width: 1023px), only print {\n///   .float-grid-example-2 > * {\n///     width: 33.33333%;\n///   }\n///   .float-grid-example-2 > *:nth-child(3n+1) {\n///     clear: both;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1024px) and (max-width: 1279px) {\n///   .float-grid-example-2 > * {\n///     width: 33.33333%;\n///   }\n///   .float-grid-example-2 > *:nth-child(3n+1) {\n///     clear: both;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1280px) and (max-width: 1799px) {\n///   .float-grid-example-2 > * {\n///     width: 25%;\n///   }\n///   .float-grid-example-2 > *:nth-child(4n+1) {\n///     clear: both;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1800px) {\n///   .float-grid-example-2 > * {\n///     width: 25%;\n///   }\n///   .float-grid-example-2 > *:nth-child(4n+1) {\n///     clear: both;\n///   }\n/// }\n/// @example html An example on how this column set can work\n/// <div class=\"float-grid-example-2\">\n///     <div>First column</div>\n///     <div>Second column</div>\n///     <div>Third column</div>\n///     <div>Fourth column</div>\n/// </div>\n\n@mixin setFloatGridContainer(\n    $hdFullSteps          : 0,\n    $hdReadySteps         : $hdFullSteps,\n    $tabletLandscapeSteps : $hdReadySteps,\n    $tabletPortraitSteps  : $tabletLandscapeSteps,\n    $mobileLandscapeSteps : 1,\n    $mobilePortraitSteps  : 1\n    ) {\n\n    width: 100%;\n\n    &::after {\n        content: \"\";\n        display: block;\n        clear: both;\n    }\n\n    @if $use-core-base != true {\n        @include box-sizing(\"border-box\");\n        * {\n            @include box-sizing(\"border-box\");\n        }\n    }\n\n    @include _checkAutoClear($hdFullSteps, $hdReadySteps, $tabletLandscapeSteps, $tabletPortraitSteps, $mobileLandscapeSteps, $mobilePortraitSteps);\n}\n\n/// Apply a column cell for the float grid system\n/// @author <a href=\"http://twitter.com/vttrx\">Vittorio Vittori</a>\n/// @group Grids - Float grid\n/// @access public\n/// @param {int} $hdFullStep          [0] - Column steps for Full HD viewports\n/// @param {int} $hdReadyStep         [0] - Column steps for HD Ready viewports\n/// @param {int} $tabletLandscapeStep [0] - Column steps for Tablet landscape viewports\n/// @param {int} $tabletPortraitStep  [0] - Column steps for Tablet portrait viewports\n/// @param {int} $mobileLandscapeStep [0] - Column steps for Mobile landscape viewports\n/// @param {int} $mobilePortraitStep  [0] - Column steps for Mobile portrait viewports\n/// @param {int} $totalSteps          [12] - Total column steps\n/// @example scss Default usage, it sets a simple column cell with `width:100%;`\n/// .float-grid-column-example-1 {\n///     @include setFloatGridColumn();\n/// }\n/// @example css Generated CSS\n/// .float-grid-column-example-1 {\n///   width: 100%;\n///   float: left;\n///   position: relative;\n///   -webkit-box-sizing: border-box;\n///   -khtml-box-sizing: border-box;\n///   -moz-box-sizing: border-box;\n///   -ms-box-sizing: border-box;\n///   -o-box-sizing: border-box;\n///   box-sizing: border-box;\n/// }\n/// @example scss Creates a column with padding, and three different sizes based on three different viewport step groups\n/// .float-grid-column-example-2 {\n///     @include setFloatGridColumn(3, 3, 4, 4, 6, 6);\n/// }\n/// @example css CSS generated with second example\n/// .float-grid-column-example-2 {\n///   width: 100%;\n///   float: left;\n///   position: relative;\n///   -webkit-box-sizing: border-box;\n///   -khtml-box-sizing: border-box;\n///   -moz-box-sizing: border-box;\n///   -ms-box-sizing: border-box;\n///   -o-box-sizing: border-box;\n///   box-sizing: border-box;\n/// }\n/// \\@media only screen and (min-width: 1px) {\n///   .float-grid-column-example-2 {\n///     width: 50%;\n///   }\n/// }\n/// \\@media only screen and (min-width: 480px) {\n///   .float-grid-column-example-2 {\n///     width: 50%;\n///   }\n/// }\n/// \\@media only screen and (min-width: 768px), only print {\n///   .float-grid-column-example-2 {\n///     width: 33.33333%;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1024px) {\n///   .float-grid-column-example-2 {\n///     width: 33.33333%;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1280px) {\n///   .float-grid-column-example-2 {\n///     width: 25%;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1800px) {\n///   .float-grid-column-example-2 {\n///     width: 25%;\n///   }\n/// }\n\n@mixin setFloatGridColumn(\n    $hdFullStep          : 0,\n    $hdReadyStep         : 0,\n    $tabletLandscapeStep : 0,\n    $tabletPortraitStep  : 0,\n    $mobileLandscapeStep : 0,\n    $mobilePortraitStep  : 0,\n    $totalSteps          : 12\n    ) {\n\n    width: 100%;\n\n    @include _setColumnBehavior(true, left, true, false);\n\n    @include _setFloatGridColumn($from-mobile-portrait,  $mobilePortraitStep,  $totalSteps);\n    @include _setFloatGridColumn($from-mobile-landscape, $mobileLandscapeStep, $totalSteps);\n    @include _setFloatGridColumn($from-tablet-portrait,  $tabletPortraitStep,  $totalSteps);\n    @include _setFloatGridColumn($from-tablet-landscape, $tabletLandscapeStep, $totalSteps);\n    @include _setFloatGridColumn($from-hd-ready,         $hdReadyStep,         $totalSteps);\n    @include _setFloatGridColumn($from-hd-full,          $hdFullStep,          $totalSteps);\n}\n\n@mixin _setFloatGridColumn($rule, $step, $totalColumns) {\n    @if $step != false {\n        @media #{$rule} {\n            @include _setFloatGridColumnStep($step, $totalColumns);\n        }\n    }\n}\n\n/// Apply a `margin-left` percent for the float grid system based on steps defined\n/// @author <a href=\"http://twitter.com/vttrx\">Vittorio Vittori</a>\n/// @group Grids - Float grid\n/// @access public\n/// @param {int} $mobilePortraitStep  [0] - Column steps for Mobile portrait viewports\n/// @param {int} $mobileLandscapeStep [0] - Column steps for Mobile landscape viewports\n/// @param {int} $tabletPortraitStep  [0] - Column steps for Tablet portrait viewports\n/// @param {int} $tabletLandscapeStep [0] - Column steps for Tablet landscape viewports\n/// @param {int} $hdReadyStep         [0] - Column steps for HD Ready viewports\n/// @param {int} $hdFullStep          [0] - Column steps for Full HD viewports\n/// @param {int} $totalSteps          [12] - Total column steps\n/// @example scss Default usage, it sets a different `margin-left` percent based on steps defined\n/// .float-grid-column-offset {\n///     @include setFloatGridOffset(0, 0, 2, 3, 4, 4);\n/// }\n/// @example css CSS generated\n/// .float-grid-column-offset {\n///   margin-left: 0;\n/// }\n/// \\@media only screen and (min-width: 768px), only print {\n///   .float-grid-column-offset {\n///     margin-left: 16.66667%;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1024px) {\n///   .float-grid-column-offset {\n///     margin-left: 25%;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1280px) {\n///   .float-grid-column-offset {\n///     margin-left: 33.33333%;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1800px) {\n///   .float-grid-column-offset {\n///     margin-left: 33.33333%;\n///   }\n/// }\n/// @example scss An element centered on the page\n/// .float-grid-column-centered {\n///     @include setFloatGridColumn(4, 4, 6, 6, 8, 8);\n///     @include setFloatGridOffset(4, 4, 3, 3, 2, 2);\n/// }\n/// @example css CSS generated\n/// .float-grid-column-centered {\n///   width: 100%;\n///   padding-left: 20px;\n///   padding-right: 20px;\n///   padding-bottom: 20px;\n///   float: left;\n///   position: relative;\n///   -webkit-box-sizing: border-box;\n///   -khtml-box-sizing: border-box;\n///   -moz-box-sizing: border-box;\n///   -ms-box-sizing: border-box;\n///   -o-box-sizing: border-box;\n///   box-sizing: border-box;\n///   margin-left: 0;\n/// }\n/// \\@media only screen and (min-width: 1px) {\n///   .float-grid-column-centered {\n///     width: 66.66667%;\n///   }\n/// }\n/// \\@media only screen and (min-width: 480px) {\n///   .float-grid-column-centered {\n///     width: 66.66667%;\n///   }\n/// }\n/// \\@media only screen and (min-width: 768px), only print {\n///   .float-grid-column-centered {\n///     width: 50%;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1024px) {\n///   .float-grid-column-centered {\n///     width: 50%;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1280px) {\n///   .float-grid-column-centered {\n///     width: 33.33333%;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1800px) {\n///   .float-grid-column-centered {\n///     width: 33.33333%;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1px) {\n///   .float-grid-column-centered {\n///     margin-left: 16.66667%;\n///   }\n/// }\n/// \\@media only screen and (min-width: 480px) {\n///   .float-grid-column-centered {\n///     margin-left: 16.66667%;\n///   }\n/// }\n/// \\@media only screen and (min-width: 768px), only print {\n///   .float-grid-column-centered {\n///     margin-left: 25%;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1024px) {\n///   .float-grid-column-centered {\n///     margin-left: 25%;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1280px) {\n///   .float-grid-column-centered {\n///     margin-left: 33.33333%;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1800px) {\n///   .float-grid-column-centered {\n///     margin-left: 33.33333%;\n///   }\n/// }\n\n@mixin setFloatGridOffset(\n    $hdFullStep          : 0,\n    $hdReadyStep         : 0,\n    $tabletLandscapeStep : 0,\n    $tabletPortraitStep  : 0,\n    $mobileLandscapeStep : 0,\n    $mobilePortraitStep  : 0,\n    $totalSteps          : 12\n    ) {\n\n    margin-left: 0;\n\n    @include _setFloatGridOffset($from-mobile-portrait,  $mobilePortraitStep,  $totalSteps);\n    @include _setFloatGridOffset($from-mobile-landscape, $mobileLandscapeStep, $totalSteps);\n    @include _setFloatGridOffset($from-tablet-portrait,  $tabletPortraitStep,  $totalSteps);\n    @include _setFloatGridOffset($from-tablet-landscape, $tabletLandscapeStep, $totalSteps);\n    @include _setFloatGridOffset($from-hd-ready,         $hdReadyStep,         $totalSteps);\n    @include _setFloatGridOffset($from-hd-full,          $hdFullStep,          $totalSteps);\n}\n\n@mixin _setFloatGridOffset($rule, $step, $totalColumns) {\n    @if $step != false {\n        @media #{$rule} {\n            @include _setColumnMarginOffsetStep($step, $totalColumns)\n        }\n    }\n}\n\n/// Generates a `margin-left` percent set for the float grid system\n/// @author <a href=\"http://twitter.com/vttrx\">Vittorio Vittori</a>\n/// @group Grids - Float grid\n/// @access public\n/// @param {int}     $hdSteps              [12]                  - Column steps for HD viewports\n/// @param {int}     $tabletSteps          [$hdSteps]            - Column steps for Tablet viewports\n/// @param {int}     $mobileSteps          [$tabletSteps]        - Column steps for Mobile viewports\n/// @param {string}  $hdViewportPrefix     [\"hd-offset-\"]        - Columns rule HD viewport prefix\n/// @param {string}  $tabletViewportPrefix [\"tablet-offset-\"]    - Columns rule Tablet viewport prefix\n/// @param {string}  $mobileViewportPrefix [\"mobile-offset-\"]    - Columns rule Mobile viewport prefix\n/// @param {string}  $fillFromViewport     [\"mobile-landscape\"]  - The viewport step where columns will be set to `width:100%`\n/// @param {boolean} $viewTotalColumns     [true]                - Choose to see or not to see total columns at the end of the rule name\n/// @param {int}     $columnsSeparator     [\"-of-\"]              - Columns separator, only applied if `$viewTotalColumns` is `true`\n/// @param {int}     $useHdRules           [true]                - Allows HD viewports rules to be generated\n/// @param {int}     $useTabletRules       [true]                - Allows Tablet viewports rules to be generated\n/// @param {int}     $useMobileRules       [true]                - Allows Mobile viewports rules to be generated\n/// @example scss Default usage, it's recommended to be used in your theme's `app.scss`, by default will generate 12 columns set rules\n/// \\@include addFloatGridColumns(4,2,2);\n/// @example css CSS generated\n/// \\@media only screen and (min-width: 1px) {\n///   .hd-offset-4-of-4 {\n///     margin-left: 100%;\n///   }\n///\n///   .hd-offset-3-of-4 {\n///     margin-left: 75%;\n///   }\n///\n///   .hd-offset-2-of-4 {\n///     margin-left: 50%;\n///   }\n///\n///   .hd-offset-1-of-4 {\n///     margin-left: 25%;\n///   }\n///\n///   .tablet-offset-2-of-2 {\n///     margin-left: 100%;\n///   }\n///\n///   .tablet-offset-1-of-2 {\n///     margin-left: 50%;\n///   }\n///\n///   .mobile-offset-2-of-2 {\n///     margin-left: 100%;\n///   }\n///\n///   .mobile-offset-1-of-2 {\n///     margin-left: 50%;\n///   }\n/// }\n/// \\@media only screen and (min-width: 768px), only print {\n///   .mobile-offset-2-of-2 {\n///     margin-left: 100%;\n///   }\n///\n///   .mobile-offset-1-of-2 {\n///     margin-left: 50%;\n///   }\n///\n///   .hd-offset-4-of-4 {\n///     margin-left: 100%;\n///   }\n///\n///   .hd-offset-3-of-4 {\n///     margin-left: 75%;\n///   }\n///\n///   .hd-offset-2-of-4 {\n///     margin-left: 50%;\n///   }\n///\n///   .hd-offset-1-of-4 {\n///     margin-left: 25%;\n///   }\n///\n///   .tablet-offset-2-of-2 {\n///     margin-left: 100%;\n///   }\n///\n///   .tablet-offset-1-of-2 {\n///     margin-left: 50%;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1280px) {\n///   .mobile-offset-2-of-2 {\n///     margin-left: 100%;\n///   }\n///\n///   .mobile-offset-1-of-2 {\n///     margin-left: 50%;\n///   }\n///\n///   .tablet-offset-2-of-2 {\n///     margin-left: 100%;\n///   }\n///\n///   .tablet-offset-1-of-2 {\n///     margin-left: 50%;\n///   }\n///\n///   .hd-offset-4-of-4 {\n///     margin-left: 100%;\n///   }\n///\n///   .hd-offset-3-of-4 {\n///     margin-left: 75%;\n///   }\n///\n///   .hd-offset-2-of-4 {\n///     margin-left: 50%;\n///   }\n///\n///   .hd-offset-1-of-4 {\n///     margin-left: 25%;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1280px) {\n///   .hd-offset-disabled {\n///     margin-left: 0;\n///   }\n/// }\n/// \\@media only screen and (min-width: 768px) and (max-width: 1279px), only print {\n///   .tablet-offset-disabled {\n///     margin-left: 0;\n///   }\n/// }\n/// \\@media only screen and (min-width: 1px) and (max-width: 767px) {\n///   .mobile-offset-disabled {\n///     margin-left: 0;\n///   }\n/// }\n\n@mixin addFloatGridOffset(\n    $hdSteps              : 12,\n    $tabletSteps          : $hdSteps,\n    $mobileSteps          : $tabletSteps,\n    $hdViewportPrefix     : \"hd-offset-\",\n    $tabletViewportPrefix : \"tablet-offset-\",\n    $mobileViewportPrefix : \"mobile-offset-\",\n    $fillFromViewport     : \"mobile-landscape\",\n    $viewTotalColumns     : true,\n    $columnsSeparator     : \"-of-\",\n    $useHdRules           : true,\n    $useTabletRules       : true,\n    $useMobileRules       : true\n    ) {\n\n    @media #{$from-mobile-portrait} {\n        // mobile portrait\n        @if $useHdRules == true {\n            @include _addColumnMarginOffset($hdViewportPrefix, $hdSteps, $viewTotalColumns, $columnsSeparator, true);\n        }\n        @if $useTabletRules == true {\n            @include _addColumnMarginOffset($tabletViewportPrefix, $tabletSteps, $viewTotalColumns, $columnsSeparator, true);\n        }\n        @if $useMobileRules == true {\n            @include _addColumnMarginOffset($mobileViewportPrefix, $mobileSteps, $viewTotalColumns, $columnsSeparator);\n        }\n    }\n\n    @media #{$from-tablet-portrait} {\n        // Tablet portrait\n        @if $useMobileRules == true {\n            @include _addColumnMarginOffset($mobileViewportPrefix, $mobileSteps, $viewTotalColumns, $columnsSeparator);\n        }\n        @if $useHdRules == true {\n            @include _addColumnMarginOffset($hdViewportPrefix, $hdSteps, $viewTotalColumns, $columnsSeparator, true);\n        }\n        @if $useTabletRules == true {\n            @include _addColumnMarginOffset($tabletViewportPrefix, $tabletSteps, $viewTotalColumns, $columnsSeparator);\n        }\n    }\n\n    @media #{$from-hd-ready} {\n        // HD Ready\n        @if $useMobileRules == true {\n            @include _addColumnMarginOffset($mobileViewportPrefix, $mobileSteps, $viewTotalColumns, $columnsSeparator);\n        }\n        @if $useTabletRules == true {\n            @include _addColumnMarginOffset($tabletViewportPrefix, $tabletSteps, $viewTotalColumns, $columnsSeparator);\n        }\n        @if $useHdRules == true {\n            @include _addColumnMarginOffset($hdViewportPrefix, $hdSteps, $viewTotalColumns, $columnsSeparator);\n        }\n    }\n\n    @media #{$only-hd} {\n        .#{$hdViewportPrefix}disabled {\n            margin-left: 0;\n        }\n    }\n\n    @media #{$only-tablet} {\n        .#{$tabletViewportPrefix}disabled {\n            margin-left: 0;\n        }\n    }\n\n    @media #{$only-mobile} {\n        .#{$mobileViewportPrefix}disabled {\n            margin-left: 0;\n        }\n    }\n}\n\n@mixin _checkAutoClear(\n    $hdFullSteps,\n    $hdReadySteps,\n    $tabletLandscapeSteps,\n    $tabletPortraitSteps,\n    $mobileLandscapeSteps,\n    $mobilePortraitSteps,\n    $selector:false\n    ){\n    @if $hdFullSteps > 0 {\n        // Media queries for selectors active from a specific resolution or higher\n\n        @if $selector != false {\n            .#{$selector} > * {\n                min-height: 1px;\n                @include _setColumnBehavior(true, left, false, true);\n                @include _setFloatGridColumnStep(1, $hdFullSteps);\n            }\n        } @else {\n            > * {\n                min-height: 1px;\n                @include _setColumnBehavior();\n                @include _setFloatGridColumnStep(1, $hdFullSteps);\n            }\n        }\n        @include _checkAutoClearViewport($only-mobile-portrait,  $mobilePortraitSteps,  $selector);\n        @include _checkAutoClearViewport($only-mobile-landscape, $mobileLandscapeSteps, $selector);\n        @include _checkAutoClearViewport($only-tablet-portrait,  $tabletPortraitSteps,  $selector);\n        @include _checkAutoClearViewport($only-tablet-landscape, $tabletLandscapeSteps, $selector);\n        @include _checkAutoClearViewport($only-hd-ready,         $hdReadySteps,         $selector);\n        @include _checkAutoClearViewport($only-hd-full,          $hdFullSteps,          $selector);\n    }\n}\n\n@mixin _checkAutoClearViewport($viewport, $steps, $selector:false) {\n    @media #{$viewport} {\n        @if $selector != false {\n            .#{$selector} > * {\n                @include _setFloatGridColumns($steps);\n            }\n        } @else {\n            > * {\n                @include _setFloatGridColumns($steps);\n            }\n        }\n    }\n}\n\n@mixin _addFloatGridColumnSet($prefix, $totalSteps, $viewTotalColumns:true, $columnsSeparator:\"-of-\") {\n    $startIndex : $totalSteps;\n    @include _loopFloatGridColumnSet($totalSteps, $prefix, $startIndex, $viewTotalColumns, $columnsSeparator, \"\");\n}\n\n@mixin _addFillToColumnSet($prefix, $totalSteps, $fillViewport:\"mobile-landscape\", $viewTotalColumns:true, $columnsSeparator:\"-of-\") {\n    $startIndex : $totalSteps;\n    @include _loopFloatGridColumnSetFill($prefix, $totalSteps, $fillViewport, $startIndex, $viewTotalColumns, $columnsSeparator);\n}\n\n@mixin _preventMobileColumnSet($prefix:col-, $totalSteps:12, $viewTotalColumns:true, $columnsSeparator:\"-of-\") {\n    @if $use-mobile-landscape == true {\n        $startIndex : $totalSteps;\n        @media #{$till-tablet-portrait} {\n            // mobile landscape\n            @include _loopMobileColumnSet($prefix, $totalSteps, $startIndex, $viewTotalColumns, $columnsSeparator);\n        }\n    }\n}\n\n@mixin _loopFloatGridColumnSet ($total, $prefix, $index, $viewTotalColumns, $columnsSeparator, $prevRule:\"\"){\n    $nextRule:\"\";\n    @if $viewTotalColumns == true {\n        @while $index >= 0{\n            @if $index == $total{\n                $nextRule: \".#{$prefix}#{$index}#{$columnsSeparator}#{$total}\";\n            }\n            @else{\n                @if $index > 0{\n                    $nextRule: $nextRule + \", .#{$prefix}#{$index}#{$columnsSeparator}#{$total}\";\n                }\n            }\n\n            @if $index > 0{\n                .#{$prefix}#{$index}#{$columnsSeparator}#{$total} {\n                    @include _setFloatGridColumnStep($index, $total);\n                }\n            }\n\n            @if $index == 0{\n                #{$nextRule} {\n                    @include _setColumnBehavior();\n                }\n            }\n\n            $index: $index - 1;\n        }\n    }\n    @else {\n        @while $index >= 0 {\n            @if $index == $total {\n                $nextRule: \".#{$prefix}#{$index}\";\n            }\n            @else {\n                @if $index > 0 {\n                    $nextRule: $nextRule + \", .#{$prefix}#{$index}\";\n                }\n            }\n\n            @if $index > 0 {\n                .#{$prefix}#{$index} {\n                    @include _setFloatGridColumnStep($index, $total);\n                }\n            }\n\n            @if $index == 0{\n                #{$nextRule} {\n                    @include _setColumnBehavior();\n                }\n            }\n\n            $index: $index - 1;\n        }\n    }\n}\n\n@mixin _addColumnMarginOffset($prefix:col-, $totalSteps:12, $viewTotalColumns:true, $columnsSeparator:\"-of-\", $removeMargin:false) {\n    $startIndex: $totalSteps;\n    @include _loopColumnMarginOffset($totalSteps, $prefix, $startIndex, $viewTotalColumns, $columnsSeparator, \"\", $removeMargin);\n}\n\n@mixin _loopColumnMarginOffset ($total, $prefix, $index, $viewTotalColumns, $columnsSeparator, $prevRule:\"\", $removeMargin:false){\n    $nextRule:\"\";\n    @if $viewTotalColumns == true{\n        @while $index >= 0{\n            @if $index == $total{\n                $nextRule: \".#{$prefix}#{$index}#{$columnsSeparator}#{$total}\";\n            }\n            @else{\n                @if $index > 0{\n                    $nextRule: $nextRule + \", .#{$prefix}#{$index}#{$columnsSeparator}#{$total}\";\n                }\n            }\n\n            @if $index > 0{\n                .#{$prefix}#{$index}#{$columnsSeparator}#{$total} {\n                    @include _setColumnMarginOffsetStep($index, $total, $removeMargin);\n                }\n            }\n\n            $index: $index - 1;\n        }\n    }\n    @else{\n        @while $index >= 0{\n            @if $index == $total{\n                $nextRule: \".#{$prefix}#{$index}\";\n            }\n            @else {\n                @if $index > 0{\n                    $nextRule: $nextRule + \", .#{$prefix}#{$index}\";\n                }\n            }\n\n            @if $index > 0{\n                .#{$prefix}#{$index} {\n                    @include _setColumnMarginOffsetStep($index, $total, $removeMargin);\n                }\n            }\n\n            $index: $index - 1;\n        }\n    }\n}\n\n@mixin _setColumnMarginOffsetStep($step, $columns, $removeMargin:false) {\n    @if $removeMargin == true {\n      margin-left: 0;\n    } @else {\n      margin-left: _clean((100% * $step)/$columns);\n    }\n}\n\n@mixin _loopMobileColumnSet($prefix, $total, $index, $viewTotalColumns, $columnsSeparator){\n    @while $index >= 0{\n         @if $index > 0 and $viewTotalColumns == true {\n            .#{$prefix}#{$index}#{$columnsSeparator}#{$total} {\n                @include _setFloatGridColumnStep($index, $total);\n            }\n        }\n        @if $index > 0 and $viewTotalColumns == false {\n            .#{$prefix}#{$index} {\n                @include _setFloatGridColumnStep($index, $total);\n            }\n        }\n        $index: $index - 1;\n    }\n}\n\n@mixin _loopFloatGridColumnSetFill ($prefix, $total, $fill, $index, $viewTotalColumns, $columnsSeparator, $prevRule:\"\"){\n    $nextRule:\"\";\n    @if $viewTotalColumns == true{\n        @while $index >= 0{\n            @if $index == $total{\n                $nextRule: \".#{$prefix}#{$index}#{$columnsSeparator}#{$total}\";\n            }\n            @else{\n                @if $index > 0{\n                    $nextRule: $nextRule + \", .#{$prefix}#{$index}#{$columnsSeparator}#{$total}\";\n                }\n            }\n\n            @if $index == 0 and $fill == \"tablet-landscape\" {\n                @media #{$till-hd-ready} {\n                    // Tablet landscape\n                    #{$nextRule} {\n                        width: 100%;\n                    }\n                }\n            }\n\n            @if $index == 0 and $fill == \"tablet-portrait\" {\n                @media #{$till-tablet-landscape} {\n                    // Tablet landscape\n                    #{$nextRule} {\n                        width: 100%;\n                    }\n                }\n            }\n\n            @if $index == 0 and $fill == \"mobile-landscape\" {\n                @media #{$till-tablet-portrait} {\n                    // Tablet landscape\n                    #{$nextRule} {\n                        width: 100%;\n                    }\n                }\n            }\n\n            @if $index == 0 and $fill == \"mobile-portrait\" {\n                @media #{$till-mobile-landscape} {\n                    // Tablet landscape\n                    #{$nextRule} {\n                        width: 100%;\n                    }\n                }\n            }\n\n            $index: $index - 1;\n        }\n    }\n    @else{\n        @while $index >= 0{\n            @if $index == $total{\n                $nextRule: \".#{$prefix}#{$index}\";\n            }\n            @else {\n                @if $index > 0{\n                    $nextRule: $nextRule + \", .#{$prefix}#{$index}\";\n                }\n            }\n\n            @if $index == 0 and $fill == \"tablet-landscape\" {\n                @media #{$till-hd-ready} {\n                    // Tablet landscape\n                    #{$nextRule} {\n                        width: 100%;\n                    }\n                }\n            }\n\n            @if $index == 0 and $fill == \"tablet-portrait\" {\n                @media #{$till-tablet-landscape} {\n                    // Tablet landscape\n                    #{$nextRule} {\n                        width: 100%;\n                    }\n                }\n            }\n\n            @if $index == 0 and $fill == \"mobile-landscape\" {\n                @media #{$till-tablet-portrait} {\n                    // Tablet landscape\n                    #{$nextRule} {\n                        width: 100%;\n                    }\n                }\n            }\n\n            @if $index == 0 and $fill == \"mobile-portrait\" {\n                @media #{$till-mobile-landscape} {\n                    // Tablet landscape\n                    #{$nextRule} {\n                        width: 100%;\n                    }\n                }\n            }\n\n\n            $index: $index - 1;\n        }\n    }\n}\n\n@mixin _setFloatGridColumns($columns) {\n    width: _clean(100%/$columns);\n    &:nth-child(#{$columns}n+1) {\n        clear:both;\n    }\n}\n\n@mixin _setFloatGridColumnStep($step, $columns) {\n    width: _clean(((100% * $step) / $columns));\n}\n\n@mixin _setColumnBehavior($usePosition:true, $float:left, $useBorderBox:false, $usePadding:true) {\n    @if $usePadding == true {\n        padding-left: $horizontal-padding;\n        padding-right: $horizontal-padding;\n        padding-bottom: $vertical-padding;\n    }\n    float: left;\n    @if $usePosition == true {\n        position: relative;\n    }\n    @if $useBorderBox == true {\n        @include box-sizing(\"border-box\");\n    }\n}\n","\n$color-aqua: #47c1fc;\n$color-gold-light: mix(rgb(184, 151, 102), #fff);\n$color-gold: rgb(184, 151, 102);\n$color-light: #fff;\n$color-dark: #4e4d48;\n\n$color-background-page: $color-light;\n$color-background-link: mix($color-gold, $color-light, 20%);\n$color-background-shaded: mix($color-dark, $color-light, 85%);\n$color-background-dark: $color-dark;\n\n$color-text-lightest: #fff;\n$color-text: $font-color;\n$color-text-light: mix($color-text, $color-background-page, 40%);\n$color-text-shaded: #a4a296;\n$color-border-transparent: rgba($color-text, 0.15);\n$color-border: mix($color-text, $color-background-page, 2%);\n$color-hr: #e5e5e5;\n$color-border-dark: $color-text;\n\n\n$color-map-category-snippet: #1aabd8;\n$color-map-snippet:          #9ddaec;\n$color-map-example:          #bdd549;\n$color-map-page:             #fae83e;\n$color-map-category-doc:     #fcb71e;\n$color-map-doc:              #f58023;\n\n$tip-arrow-position: 14px;\n$tip-arrow-size: 6px;\n$tip-duration: 0.5s;\n$tip-width: 200px;\n\n$map-dot-size: 16px;\n\n$color-link: $color-aqua;\n\n$height-header: 60px;\n\n$font-size-title: 18px;\n$font-size-big: 16px;\n$font-size-normal: 14px;\n$font-size-small: 12px;\n\n$font-weight-normal: 400;\n$font-weight-bold: 600;\n$radius: 3px;\n$ease-hover-fast: 0.325s ease('out-expo');\n$ease-hover: 0.5s ease('out-expo');\n$ease-hover-slow: 0.75s ease('out-expo');\n","/// Returns the product of the value passed with number, it's mainly used by the core for `spacing` and `s` mixins\n/// @author <a href=\"http://twitter.com/vttrx\">Vittorio Vittori</a>\n/// @group Frontsize functions\n/// @access public\n/// @param {int} $multiplier [1] - The multiplier for theme config's global var `$spacing`\n/// @example scss SCSS example\n///   .selector {\n///       $value: 20px;\n///       padding-top: scaleValue($value, 2);\n///       padding-bottom: scaleValue($value, 0.5);\n///   }\n/// @example css CSS generated\n///   .selector {\n///       padding-top: 40px;\n///       padding-bottom: 10px;\n///   }\n\n@function scaleValue($value, $scale) {\n    @return round($value * $scale);\n}\n\n/// Returns the product of theme config's global var `$spacing` with the integer passed\n/// @author <a href=\"http://twitter.com/vttrx\">Vittorio Vittori</a>\n/// @group Frontsize functions\n/// @access public\n/// @param {int} $multiplier [1] - The multiplier for theme config's global var `$spacing`\n/// @example scss The default value of spacing pamameter si `1`\n///   .selector {\n///       // we have set theme config core var $spacing: 30px;\n///       padding-top: spacing();\n///       padding-bottom: spacing(2);\n///       padding-right: spacing(0.5);\n///       padding-left: spacing(0.5);\n///   }\n/// @example css CSS generated if `$spacing` is `15px`\n///   .selector {\n///       padding-top: 30px;\n///       padding-bottom: 60px;\n///       padding-right: 15px;\n///       padding-left: 15px;\n///   }\n\n@function spacing($scale:1) {\n    @return scaleValue($spacing, $scale);\n}\n\n/// Alias for `spacing` function to a lesser verbose usage\n/// @author <a href=\"http://twitter.com/vttrx\">Vittorio Vittori</a>\n/// @group Frontsize functions\n/// @access public\n/// @param {int} $multiplier [1] - The multiplier for theme config's global var `$spacing`\n/// @example scss The default value of spacing pamameter si `1`\n///   .selector-s {\n///     // we have set theme config core var $spacing: 30px;\n///     padding-top: s(2);\n///     padding-bottom: s(2, 10px);\n///     padding-right: s(0.5);\n///     padding-left: s();\n///   }\n/// @example css CSS generated if `$spacing` is `15px`\n///   .selector {\n///     padding-top: 60px;\n///     padding-bottom: 20px;\n///     padding-right: 15px;\n///     padding-left: 30px;\n///   }\n\n@function s($scale:1, $value:false) {\n    @if $value == false {\n        @return spacing($scale);\n    } @else {\n        @return scaleValue($value, $scale);\n    }\n}\n\n/// Returns a percentage fraction of two integers, it's useful to define custom column sizes\n/// @author <a href=\"http://twitter.com/vttrx\">Vittorio Vittori</a>\n/// @group Frontsize functions\n/// @access public\n/// @param {int} $step       [required] - The current step to be converted in percentage\n/// @param {int} $totalSteps [12]       - The total steps, 12 by default\n/// @example scss SCSS example\n///   .selector {\n///       width: step(4, 12);\n///   }\n/// @example css CSS generated\n///   .selector {\n///       width: 33.33333%;\n///   }\n/// @example scss SCSS example\n///   .selector {\n///       width: step(3);\n///   }\n/// @example css CSS generated\n///   .selector {\n///       width: 25%;\n///   }\n\n@function step($step, $totalSteps:12) {\n    @return ($step * 100 / $totalSteps) * 1%;\n}\n\n@function _values($value) {\n    @if $use-css-prefix == true {\n        @if $value == \"filter\" {\n            @return \"filter\" \"-webkit-filter\";\n        } @elseif $value == \"transform\" {\n            @return \"transform\" \"-webkit-transform\";\n        } @elseif $value == \"box-shadow\" {\n            @return \"box-shadow\" \"-webkit-box-shadow\" \"-khtml-box-shadow\" \"-moz-box-shadow\" \"-ms-box-shadow\" \"-o-box-shadow\";\n        } @else {\n            @return $value;\n        }\n    } @else {\n        @return $value;\n    }\n}\n\n@function _clean($value) {\n    @if $value == 0px or $value == 0% or $value == 0em or $value == 0rem {\n        @return 0;\n    } @else {\n        @return $value;\n    }\n}\n","\n// font sizes for h# elements\n$h1: 32px;\n$h2: 28px;\n$h3: 24px;\n$h4: 20px;\n$h5: 18px;\n$h6: 16px;\n\n// Font sizes\n$font-size:       12px;\n$font-small-size: 12px;\n\n// Fonts families global vars\n$font-sans: 'karla', 'helvetica neue', helvetica, arial, sans-serif;\n$font-serif: 'bitter', 'times new roman', times, serif;\n$font-monospace: menlo, monaco, 'courier new', monospace;\n$font-small: 'lucida grande', tahoma, verdana, arial, sans-serif;\n\n// Default fonts used inside the core\n$font-default: $font-sans;\n$font-heading: $font-serif;\n\n// used with s(); mixin, if $spacing is 20px s(0.5); returns 10px\n$spacing: 20px;\n\n$font-line-height: 1.25;\n$font-weight: 300;\n$font-color: #4e4d48;\n$body-color: #fff;\n$fallback-color-base: $body-color;\n\n// Global padding configuration\n$horizontal-padding: s();\n$vertical-padding: s();\n$global-padding: $vertical-padding $horizontal-padding;\n\n// State selectors configuration\n$state-important: true;\n$state-faded-opacity: 0.5;\n$state-disabled-opacity: 0.5;\n$state-table-padding: s(0.5);\n\n// set different width for the mobile, tablets and hd resolutions\n$mobile-portrait-step: 320px;  // mobile portrait  320~380\n$mobile-landscape-step: 480px;  // mobile landscape 480~568~685\n$tablet-portrait-step: 768px;  // tablet portrait       768\n$tablet-landscape-step: 1024px; // tablet landscape      1024\n$hd-ready-step: 1280px; // HD Ready              1280 (720p)\n$hd-full-step: 1800px; // Full HD               1920 (1080p)\n\n// Granular setting for which Media Query rules are enabled\n$use-mobile-portrait: true;\n$use-mobile-landscape: true;\n$use-tablet-portrait: true;\n$use-tablet-landscape: true;\n$use-hd-ready: true;\n$use-hd-full: true;\n$use-viewport-states: true;\n$use-print-viewport: false;\n\n$use-state-margin: false;\n$use-state-padding: false;\n$use-state-positioning: false;\n$use-state-sizing: false;\n$use-state-selectors: false;\n$use-state-table: false;\n$use-state-text: false;\n$use-state-visibility: false;\n$use-state-print: false;\n\n$use-core-base: true; // set CSSlint box-model test to true if you disable this\n$use-css-prefix: true;\n$use-ie-filters: false;\n$use-font-fallback: true;\n$use-fallbacks: true;\n\n$use-root-path: true;\n\n$path-img: '/img/';\n$path-font: '/fonts/';\n",".miniml-header {\n  background-color: $color-background-page;\n  height: $height-header;\n  position: relative;\n  transition: visibility 0s, top 0.75s ease('out-expo');\n  user-select: none;\n  width: 100%;\n\n  &::after {\n    background-color: $color-border-transparent;\n    content: '';\n    display: block;\n    height: 1px;\n    position: absolute;\n    top: $height-header;\n    width: 100%;\n  }\n\n  @include modifier('fixed') {\n    position: fixed;\n    top: 0;\n    z-index: 2;\n  }\n\n  @include modifier('outside') {\n    top: -($height-header) - 1px;\n  }\n\n  @include modifier('hidden') {\n    visibility: hidden;\n  }\n\n  @include element('group') {\n    color: $color-text;\n    display: block;\n    float: left;\n    padding: 0 s(1);\n    text-decoration: none;\n  }\n\n  @include element('title') {\n\n    @include modifier('gold') {\n      color: $color-gold;\n    }\n\n    display: block;\n    font-weight: $font-weight-bold;\n    margin-top: 14px;\n\n  }\n  @include element('desc') {\n\n    @include modifier('gold') {\n      color: $color-gold-light;\n    }\n\n    color: $color-text-light;\n    display: block;\n    font-size: $font-size-small;\n  }\n\n  @include element('left') {\n    @include column(4, 4, 4);\n  }\n\n  @include element('right') {\n    @include column(8, 8, 8);\n  }\n}\n","@function ease($easing) {\n    @if $easing == \"in-quad\" {\n        @return cubic-bezier(0.550, 0.085, 0.680, 0.530);\n    }\n    @if $easing == \"in-cubic\" {\n        @return cubic-bezier(0.550, 0.055, 0.675, 0.190);\n    }\n    @if $easing == \"in-quart\" {\n        @return cubic-bezier(0.895, 0.030, 0.685, 0.220);\n    }\n    @if $easing == \"in-quint\" {\n        @return cubic-bezier(0.755, 0.050, 0.855, 0.060);\n    }\n    @if $easing == \"in-sine\" {\n        @return cubic-bezier(0.470, 0.000, 0.745, 0.715);\n    }\n    @if $easing == \"in-expo\" {\n        @return cubic-bezier(0.950, 0.050, 0.795, 0.035);\n    }\n    @if $easing == \"in-circ\" {\n        @return cubic-bezier(0.600, 0.040, 0.980, 0.335);\n    }\n    @if $easing == \"in-back\" {\n        @return cubic-bezier(0.600,-0.280, 0.735, 0.045);\n    }\n    @if $easing == \"out-quad\" {\n        @return cubic-bezier(0.250, 0.460, 0.450, 0.940);\n    }\n    @if $easing == \"out-cubic\" {\n        @return cubic-bezier(0.215, 0.610, 0.355, 1.000);\n    }\n    @if $easing == \"out-quart\" {\n        @return cubic-bezier(0.165, 0.840, 0.440, 1.000);\n    }\n    @if $easing == \"out-quint\" {\n        @return cubic-bezier(0.230, 1.000, 0.320, 1.000);\n    }\n    @if $easing == \"out-sine\" {\n        @return cubic-bezier(0.390, 0.575, 0.565, 1.000);\n    }\n    @if $easing == \"out-expo\" {\n        @return cubic-bezier(0.190, 1.000, 0.220, 1.000);\n    }\n    @if $easing == \"out-circ\" {\n        @return cubic-bezier(0.075, 0.820, 0.165, 1.000);\n    }\n    @if $easing == \"out-back\" {\n        @return cubic-bezier(0.175, 0.885, 0.320, 1.275);\n    }\n    @if $easing == \"in-out-quad\" {\n        @return cubic-bezier(0.455, 0.030, 0.515, 0.955);\n    }\n    @if $easing == \"in-out-cubic\" {\n        @return cubic-bezier(0.645, 0.045, 0.355, 1.000);\n    }\n    @if $easing == \"in-out-quart\" {\n        @return cubic-bezier(0.770, 0.000, 0.175, 1.000);\n    }\n    @if $easing == \"in-out-quint\" {\n        @return cubic-bezier(0.860, 0.000, 0.070, 1.000);\n    }\n    @if $easing == \"in-out-sine\" {\n        @return cubic-bezier(0.445, 0.050, 0.550, 0.950);\n    }\n    @if $easing == \"in-out-expo\" {\n        @return cubic-bezier(1.000, 0.000, 0.000, 1.000);\n    }\n    @if $easing == \"in-out-circ\" {\n        @return cubic-bezier(0.785, 0.135, 0.150, 0.860);\n    }\n    @if $easing == \"in-out-back\" {\n        @return cubic-bezier(0.680,-0.550, 0.265, 1.550);\n    }\n}\n","/// Generates an element inside the block\n/// @author <a href=\"http://twitter.com/vttrx\">Vittorio Vittori</a>\n/// @group BEM\n/// @access public\n/// @param {string} $name - The name of the block's element selector\n/// @example scss Generates an element for the parent block\n///     @include block(\"social-menu\") {\n///         $grey: #FEFEFE;\n///         @include element(\"left-side\") {\n///             padding-right : s(0.5);\n///             margin-right  : s(0.5);\n///             border-right: 2px solid $grey;\n///         }\n///\n///         @include element(\"right-side\") {\n///             background-color: $grey;\n///         }\n///     }\n/// @example css The result\n///     .social-menu {\n///         background-color: white;\n///     }\n///     .social-menu__left-side {\n///         padding-right: 10px;\n///         margin-right: 10px;\n///         border-right: 2px solid #FEFEFE;\n///     }\n///     .social-menu__right-side {\n///         background-color: #FEFEFE;\n///     }\n\n@mixin block($name, $type:null) {\n    @at-root {\n        @if $type != null {\n            .#{$name}-#{$type} {\n                @content;\n            }\n        } @else {\n            .#{$name} {\n                @content;\n            }\n        }\n    }\n}\n\n/// Generates an element inside the block\n/// @author <a href=\"http://twitter.com/vttrx\">Vittorio Vittori</a>\n/// @group BEM\n/// @access public\n/// @param {string} $name - The name of the block's element selector\n/// @example scss Generates an element for the parent block\n///     @include block(\"social-menu\") {\n///\n///         $grey: #FEFEFE;\n///         background-color: white;\n///\n///         @include element(\"left-side\") {\n///             padding-right : s(0.5);\n///             margin-right  : s(0.5);\n///             border-right: 2px solid $grey;\n///         }\n///\n///         @include element(\"right-side\") {\n///             background-color: $grey;\n///         }\n///     }\n/// @example css The result\n///     .social-menu {\n///       background-color: white;\n///     }\n///     .social-menu__left-side {\n///       padding-right: 10px;\n///       margin-right: 10px;\n///       border-right: 2px solid #FEFEFE;\n///     }\n///     .social-menu__right-side {\n///       background-color: #FEFEFE;\n///     }\n\n@mixin element($name) {\n    @at-root &__#{$name} {\n        @content;\n    }\n}\n\n/// Generates a modifier inside the block's element\n/// @author <a href=\"http://twitter.com/vttrx\">Vittorio Vittori</a>\n/// @group BEM\n/// @access public\n/// @param {string} $name - The name of the element's modifier selector\n/// @example scss Generates a modifier for the parent element\n///     @include block(\"social-menu\") {\n///         $grey: #FEFEFE;\n///         background-color: white;\n///\n///         @include element(\"right-side\") {\n///             background-color: $grey;\n///             @include modifier(\"pink\") {\n///                 background-color: pink;\n///             }\n///         }\n///     }\n/// @example css The result\n///     .social-menu {\n///       background-color: white;\n///     }\n///     .social-menu__right-side {\n///       background-color: #FEFEFE;\n///     }\n///     .social-menu__right-side--pink {\n///       background-color: pink;\n///     }\n\n@mixin modifier($name) {\n    @at-root &--#{$name} {\n        @content;\n    }\n}\n","@mixin miniml-map-dot-tip-animate {\n  // $delay: 0.5s;\n  $delay: 0s;\n  opacity: 1;\n  visibility: visible;\n  // transform: scale(1);\n  // transition:\n  // display $ease-hover-fast $delay,\n  // visibility $ease-hover-fast $delay,\n  // opacity $ease-hover-fast $delay,\n  // transform $ease-hover-fast $delay,\n  // left $ease-hover-fast $delay;\n  // visibility: visible;\n}\n\n.miniml-map-dot {\n  $border-default: rgba($color-border-dark, 0.15);\n\n  background-color: $color-background-page;\n  border: 1px solid $border-default;\n  border-radius: 100px;\n  display: block;\n  float: left;\n  height: $map-dot-size;\n  margin-bottom: s(0.25);\n  margin-right: s(0.25);\n  position: relative;\n  transition: border $ease-hover;\n  width: $map-dot-size;\n\n  &::before {\n    content: '';\n    display: block;\n    height: $map-dot-size;\n    left: -4px;\n    position: absolute;\n    top: -1px;\n    transition: left $ease-hover, top $ease-hover;\n    width: 24px;\n  }\n\n  &:hover {\n    border: 2px solid $color-dark;\n\n    &::before {\n      left: -6px;\n      top: -3px;\n    }\n\n    .miniml-tip,\n    .miniml-snippet-example-preview {\n      @include miniml-map-dot-tip-animate;\n    }\n  }\n\n  @include modifier('latest') {\n    border: 2px solid $color-dark;\n    &::before {\n      top: -2px;\n    }\n  }\n\n  @include modifier('no-margin') {\n    margin-bottom: 0;\n  }\n\n  @include modifier('label') {\n    font-size: 10px;\n    line-height: $map-dot-size - 2px;\n    min-width: $map-dot-size;\n    padding: 0 4px;\n    text-align: center;\n    width: auto;\n\n    &::before {\n      display: none;\n    }\n\n    &:hover {\n      border: 1px solid $border-default;\n    }\n  }\n\n  @include modifier('category-snippet') {\n    background-color: $color-map-category-snippet;\n  }\n\n  @include modifier('category-doc') {\n    background-color: $color-map-category-doc;\n  }\n\n  @include modifier('snippet') {\n    background-color: $color-map-snippet;\n  }\n\n  @include modifier('example') {\n    background-color: $color-map-example;\n  }\n\n  @include modifier('page') {\n    background-color: $color-map-page;\n  }\n\n  @include modifier('doc') {\n    background-color: $color-map-doc;\n  }\n}\n","\n.miniml-map {\n  margin-top: s(1);\n\n  @include element('labels') {\n    @include row;\n    clear: both;\n    line-height: 1;\n    margin-bottom: s(-0.25);\n    width: 100%;\n\n    @include modifier('m-top') {\n      margin-top: s(1);\n    }\n  }\n\n  @include element('label') {\n    @include asTable(false, middle, auto);\n\n    color: $color-text;\n    cursor: default;\n    float: left;\n    font-size: $font-size-small;\n    margin-bottom: s(0.25);\n    margin-right: s(1);\n    transition: color $ease-hover;\n\n  }\n\n  @include element('dots') {\n    margin-top: s(1);\n    &::after {\n      clear: both;\n      content: '';\n      display: block;\n      height: 0;\n    }\n  }\n\n  @include element('group') {\n    overflow: auto;\n    position: relative;\n    z-index: 0;\n\n    &:hover {\n      transition-delay: 0s;\n      z-index: 1;\n\n      &::after {\n        opacity: 1;\n      }\n\n      .miniml-map-dot {\n        $border-color: rgba($color-border-dark, 0.30);\n        border: 5px solid $border-color;\n\n        &::before {\n          left: -8px;\n          top: -5px;\n        }\n\n        &:hover {\n          border: 2px solid $color-dark;\n\n          &::before {\n            left: -6px;\n            top: -2px;\n          }\n        }\n      }\n    }\n\n    &::before {\n      background-color: rgba(255,255,255,0.8);\n      bottom: 0;\n      content: '';\n      display: block;\n      left: 0;\n      opacity: 0;\n      pointer-events: none;\n      position: fixed;\n      right: 0;\n      top: 0;\n\n      transition:\n      visibility 0s linear $tip-duration * 2,\n      opacity 0.5s $ease-hover-slow;\n\n      visibility: hidden;\n      z-index: -2;\n    }\n  }\n}\n","@mixin asTable($cellPadding:false, $verticalAlign:middle, $tableWidth:100%, $borderCollapse:separate, $tableLayout:fixed) {\n    display : table;\n    table-layout: $tableLayout;\n\n    @if $tableWidth != false {\n        width : $tableWidth;\n    }\n\n    @if $borderCollapse != separate {\n        border-collapse: $borderCollapse;\n    }\n\n    > * {\n        @include asTableRow($cellPadding, $verticalAlign);\n    }\n}\n\n@mixin asTableRow($cellPadding:false, $verticalAlign:middle) {\n    display : table-row;\n    float   : none;\n    > * {\n        @include asTableCell($cellPadding, $verticalAlign);\n    }\n}\n\n@mixin asTableCell($cellPadding:false, $verticalAlign:middle) {\n    display: table-cell;\n    float: none;\n    @if ($cellPadding != false) {\n        padding: $cellPadding;\n    }\n    vertical-align: $verticalAlign;\n}\n",".miniml-snippet-example-preview {\n\n  $height: s(2);\n\n  background-color: $color-background-dark;\n  border-radius: $radius;\n\n  color: $color-text-lightest;\n  cursor: default;\n  left: s(-0.5, $tip-width) + s(0.5, $map-dot-size) - 2px;\n  min-width: $tip-width;\n  opacity: 0;\n\n  padding: s(1);\n  padding-bottom: 0;\n  position: absolute;\n\n  text-align: center;\n  top: 28px;\n  // transform: scale(0.5);\n  // transform-origin: top left;\n\n  // transition:\n  // visibility $ease-hover,\n  // transform $ease-hover $tip-duration,\n  // opacity $ease-hover,\n  // top $ease-hover;\n\n  visibility: hidden;\n  white-space: nowrap;\n  z-index: -1;\n\n  @include arrow-after((\n      'color': $color-background-dark,\n      'offset': 50%,\n      'position': top,\n      'size': $tip-arrow-size\n    ));\n\n  &::before {\n    content: '';\n    display: block;\n    height: 30px;\n    left: s(0.5, $tip-width) - s(0.75, $map-dot-size);\n    position: absolute;\n    top: s(-1.5, $map-dot-size);\n    width: s(1.5, $map-dot-size);\n    z-index: -1;\n  }\n\n  @include element('links') {\n    text-align: left;\n    white-space: nowrap;\n  }\n\n  @include element('link') {\n    border-radius: $radius;\n    color: mix($color-light, $color-background-dark);\n    display: inline-block;\n    font-size: 12px;\n    margin-bottom: s(0.5);\n    padding: s(0.125) s(0.25);\n    text-decoration: none;\n\n    &:hover {\n      color: $color-light;\n    }\n\n    & + & {\n      margin-left: s(0.5);\n    }\n  }\n\n  @include element('preview') {\n    $border: 1px solid $color-hr;\n    $background: rgba($color-light, 0.9);\n\n    background-color: $background;\n    border: $border;\n    border-radius: 0 0 $radius $radius;\n    border-top: 0;\n    margin-left: s(-1);\n    margin-right: s(-1);\n    padding: s(0.5) + 4px;\n    padding-bottom: s(0.5);\n    position: relative;\n    transition: background-color $ease-hover-slow;\n\n    &:hover {\n      background-color: rgba($color-light, 0.25);\n    }\n\n    &::after {\n      @include backgroundImage('transparent-background-light.svg');\n      background-position: 50% 50%;\n      background-size: contain;\n      bottom: 0;\n      content: '';\n      display: block;\n      left: 0;\n      position: absolute;\n      right: 0;\n      top: 0;\n      z-index: -1;\n    }\n  }\n}\n","@mixin arrow-after($map: ('color': black, 'offset': 50%, 'position': bottom, 'size': 6px)) {\n  &::after {\n    border: solid transparent;\n    border-color: transparent;\n    border-width: map-get($map, size);\n    content: ' ';\n    height: 0;\n    left: map-get($map, offset);\n    margin-left: -(map-get($map, size));\n    pointer-events: none;\n    position: absolute;\n    width: 0;\n\n    @if (map-get($map, position) == 'bottom') {\n      border-top-color: map-get($map, color);\n      top: 100%;\n    } @else if (map-get($map, position) == 'top') {\n      border-bottom-color: map-get($map, color);\n      bottom: 100%;\n    } @else if (map-get($map, position) == 'left') {\n      border-right-color: map-get($map, color);\n      right: 100%;\n    } @else if (map-get($map, position) == 'right') {\n      border-left-color: map-get($map, color);\n      left: 100%;\n    }\n  }\n}\n","@mixin ieVerticalGradient($firstColor, $lastColor) {\n    @if $use-ie-filters == true{\n        $first: fade($firstColor, 100%);\n        $last: fade($lastColor, 100%);\n        filter: progid:dximagetransform.microsoft.gradient(startColorstr='#{$firstColor}', endColorstr='#{$lastColor}', GradientType=0);\n    }\n}\n\n@mixin verticalGradient($color:#cbcbcb, $strenght:5%) {\n    @if $use-fallbacks == true {\n        background-color: rgb(red($color), green($color), blue($color));\n    }\n    @if $use-css-prefix == true {\n        background: -webkit-gradient(#{$color});\n    }\n    @if($strenght > 0%){\n        $lighten: saturate(lighten($color,$strenght),($strenght/2));\n        $darken: saturate(darken($color,$strenght),($strenght/2));\n        @include linear-gradient(\"top, #{$lighten} 0%, #{$darken} 100%\");\n        @include ieVerticalGradient($lighten, $darken);\n    }\n    @else{\n        $lighten: saturate(darken($color,abs($strenght)),(abs($strenght/2)));\n        $darken: saturate(lighten($color,abs($strenght)),(abs($strenght/2)));\n        @include linear-gradient(\"top, #{$lighten} 0%, #{$darken} 100%\");\n        @include ieVerticalGradient($lighten, $darken);\n    }\n}\n@mixin verticalGradientColors($firstColor:#000000, $lastColor:#FFFFFF) {\n    @if $use-fallbacks == true {\n        $color: mix($firstColor, $lastColor, 100%);\n        background-color: rgb(red($color), green($color), blue($color));\n    }\n    @include linear-gradient(\"top, #{$firstColor} 0%, #{$lastColor} 100%\");\n    @include ieVerticalGradient($firstColor, $lastColor);\n}\n\n@mixin glossGradient($color: #0A75Bf, $strength: 10%, $borderSize: 0){\n    @if $use-fallbacks == true {\n        background-color: rgb(red($color), green($color), blue($color));\n    }\n    @if $borderSize != 0{\n        border: $borderSize solid $color;\n    }\n    @include linear-gradient(\"bottom, lighten(#{$color}, #{$strength}/2) 0%, #{$color} 50%, lighten(#{$color}, #{$strength}) 51%, lighten(#{$color}, #{$strength}/2) 100%\");\n    @include ieVerticalGradient(lighten(#{$color}, #{$strength}/2), lighten(#{$color}, #{$strength}));\n}\n\n@mixin glossGradient($top: rgb(200,200,200), $middle: rgb(100,100,100), $bottom: rgb(150,150,150)) {\n    @include linear-gradient(\"bottom, #{$top} 0%, #{$middle} 50%, #{$bottom} 100%\");\n}\n@mixin backgroundImage($backgroundImage, $path:$path-img){\n    @if $use-root-path == false{\n        background-image: url(\"#{$backgroundImage}\");\n    }\n    @else{\n        background-image: url(\"#{$path}#{$backgroundImage}\");\n    }\n}\n\n@mixin backgroundResponsive($hdFullBackground, $hdReadyBackground, $tabletLandscapeBackground, $tabletPortraitBackground, $mobileLandscapeBackground, $mobilePortraitBackground) {\n    // .backgroundResponsive(\n    //     \"path/hd-full/background.png\",\n    //     \"path/hd-ready/background.png\",\n    //     \"path/tablet-landscape/background.png\",\n    //     \"path/tablet-portrait/background.png\",\n    //     \"path/mobile-landscape/background.png\",\n    //     \"path/mobile-portrait/background.png\"\n    // );\n    @include backgroundHdFull($hdFullBackground);\n    @include backgroundHdReady($hdReadyBackground);\n    @include backgroundTabletLandscape($tabletLandscapeBackground);\n    @include backgroundTabletPortrait($tabletPortraitBackground);\n    @include backgroundMobileLandscape($mobileLandscapeBackground);\n    @include backgroundMobilePortrait($mobilePortraitBackground);\n}\n@mixin backgroundHdFull($hdFullBackground) {\n    @if ($use-hd-full == true){\n        @media #{$from-hd-full} {\n            // Full HD\n            @include backgroundImage($hdFullBackground);\n        }\n    }\n}\n@mixin backgroundHdReady($hdReadyBackground) {\n    @if ($use-hd-ready == true){\n        @media #{$from-hd-ready} {\n            // HD Ready\n            @include backgroundImage($hdReadyBackground);\n        }\n    }\n}\n@mixin backgroundTabletLandscape($tabletLandscapeBackground) {\n    @if ($use-tablet-landscape == true){\n        @media #{$from-tablet-landscape} {\n            // Tablet landscape\n            @include backgroundImage($tabletLandscapeBackground);\n        }\n    }\n}\n@mixin backgroundTabletPortrait($tabletPortraitBackground) {\n    @if ($use-tablet-portrait == true){\n        @media #{$from-tablet-portrait} {\n            // Tablet portrait\n            @include backgroundImage($tabletPortraitBackground);\n        }\n    }\n}\n@mixin backgroundMobileLandscape($mobileLandscapeBackground) {\n    @if ($use-mobile-landscape == true){\n        @media #{$from-mobile-landscape} {\n            // mobile landscape\n            @include backgroundImage($mobileLandscapeBackground);\n        }\n    }\n}\n@mixin backgroundMobilePortrait($mobilePortraitBackground) {\n    @if ($use-mobile-portrait == true){\n        @media #{$from-mobile-portrait} {\n            // mobile portrait\n            @include backgroundImage($mobilePortraitBackground);\n        }\n    }\n}\n@mixin icon($backgroundImage, $width, $height:$width, $backgroundPosition:50% 50%) {\n    @include size($width, $height);\n    @include backgroundImage($backgroundImage);\n    background-repeat: no-repeat;\n    background-position: $backgroundPosition;\n}\n\n@mixin fillImage($backgroundImage, $path:$path-img){\n    @if $use-root-path == false{\n        fill: url('#{$backgroundImage}');\n    }\n    @else{\n        fill: url('#{$path}#{$backgroundImage}');\n    }\n}\n",".miniml-tip {\n  $height: s(2);\n  $arrow-position: 14px;\n\n  background-color: $color-background-dark;\n  border-radius: $radius;\n  color: $color-text-lightest;\n  height: $height;\n  left: s(-0.5, $tip-width) + s(0.5, $map-dot-size) - 2px;\n  line-height: $height;\n  min-width: $tip-width;\n  opacity: 0;\n\n  padding-left: s(1);\n  padding-right: s(1);\n  pointer-events: none;\n  position: absolute;\n\n  text-align: center;\n  top: s(1.25, s(-2));\n  // transform: scale(0.5);\n  // transform-origin: bottom left;\n  // transition:\n  // visibility $ease-hover,\n  // transform $ease-hover $tip-duration,\n  // opacity $ease-hover,\n  // top $ease-hover;\n\n  visibility: hidden;\n  white-space: nowrap;\n\n  @include element('type') {\n    color: mix($color-text-lightest, $color-background-dark);\n  }\n\n  @include arrow-after((\n      'color': $color-background-dark,\n      'offset': 50%,\n      'position': bottom,\n      'size': $tip-arrow-size\n    ));\n}\n",".miniml-a-pollo-release {\n\n  @include row;\n  background-color: $color-background-dark;\n  padding: s(3) s(1);\n\n  @include element('logo') {\n    $icon-size: 72px;\n    @include icon('a-pollo-logo.svg', $icon-size);\n    display: block;\n    float: left;\n  }\n\n  @include element('info') {\n    display: block;\n    float: left;\n    padding: s(0.5) s(1);\n  }\n\n  @include element('title') {\n    color: $color-text-lightest;\n    display: block;\n    font-weight: $font-weight-bold;\n  }\n\n  @include element('desc') {\n    color: $color-text-shaded;\n    display: block;\n  }\n\n  @include element('details') {\n    display: block;\n    margin: 0;\n    padding: 0;\n  }\n\n  @include element('details-item') {\n\n    display: inline-block;\n    margin-top: s(0.5);\n\n    & + & {\n      margin-left: s(1);\n    }\n  }\n\n  @include element('details-icon') {\n    color: $color-text-lightest;\n    font-size: $font-size-normal;\n    line-height: $font-size-normal;\n    margin-right: s(0.125);\n  }\n\n  @include element('text') {\n    border-radius: $radius;\n    color: $color-text-shaded;\n    font-size: $font-size-small;\n    line-height: $font-size-normal;\n    padding: 1px 2px;\n    text-decoration: none;\n    transition: color $ease-hover;\n\n    &:hover {\n      color: $color-text-lightest;\n    }\n\n    @include modifier('marked') {\n      background-color: $color-background-shaded;\n    }\n  }\n}\n","@mixin size($width:16px, $height:$width, $scale:1, $setBoxSizing:false) {\n    @if $setBoxSizing == true {\n        @include box-sizing(\"border-box\");\n    }\n\n    @if type-of($width) == 'number' {\n        $unitWidth: getUnit($width);\n        width: (removeUnit($width) * removeUnit($scale))#{$unitWidth};\n    } @else {\n        width: $width;\n    }\n\n    @if type-of($height) == 'number' {\n        $unitHeight: getUnit($height);\n        height: (removeUnit($height) * removeUnit($scale))#{$unitHeight};\n    } @else {\n        height: $height;\n    }\n\n}\n",".miniml-body {\n  background-color: $body-color;\n  color: $color-text;\n  font-family: $font-default;\n  font-size: $font-size-normal;\n  font-weight: $font-weight;\n  line-height: $font-line-height;\n  margin: 0;\n  padding: 0;\n}\n",".miniml-logo {\n  $margin: 26px;\n  $icon-size: $height-header - $margin;\n  @include icon('a-pollo-logo--gold.svg', $icon-size);\n  display: block;\n  float: left;\n  position: relative;\n  top: s(0.5, $margin);\n}\n",".miniml-main {\n  padding-top: $height-header;\n}\n",".miniml-markdown {\n  > p {\n    a {\n      $margin: 3px;\n\n      border-radius: $radius;\n      color: $color-text-light;\n      margin-left: -($margin);\n      margin-right: -($margin);\n      padding-left: $margin;\n      padding-right: $margin;\n      text-decoration: none;\n\n      transition: color $ease-hover;\n\n      &:hover {\n        color: $color-text;\n      }\n    }\n  }\n\n  @include modifier('inline') {\n    > p {\n      display: inline;\n      a {\n        display: inline;\n      }\n    }\n  }\n}\n",".miniml {\n\n  @include modifier('padding-top') {\n    padding-top: s(2);\n  }\n\n  @include element('title') {\n    font-family: $font-serif;\n    font-size: $font-size-title;\n\n    @include modifier('m-top') {\n      margin-top: s(2);\n    }\n  }\n\n  @include element('hr') {\n    border: 0;\n    border-top: 1px solid $color-hr;\n    margin-top: s(0.5);\n  }\n\n  @include element('row') {\n    @include row();\n    margin-left: s(-1);\n    margin-right: s(-1);\n    width: auto;\n  }\n\n  @include element('col-half') {\n    @include column(6,6,6);\n    padding: s(1);\n    @include modifier('p-top-none') {\n      padding-top: 0;\n    }\n  }\n\n  @include element('paragraph-title') {\n    display: block;\n    font-weight: $font-weight-bold;\n    margin-top: s(1);\n\n    @include modifier('m-top-none') {\n      margin-top: 0;\n    }\n  }\n\n  @include element('question') {\n    color: $color-text-shaded;\n    cursor: help;\n  }\n\n  @include element('icon') {\n    display: inline-block;\n    float: left;\n    font-size: $font-size-big;\n    margin-right: s(0.25);\n  }\n\n  @include element('paragraph') {\n    color: $color-text-light;\n    display: block;\n    margin-top: s(0.25);\n  }\n}\n","/// Generates a font rule with bulletproof font-face syntax\n/// @author <a href=\"http://twitter.com/vttrx\">Vittorio Vittori</a>\n/// @group Helpers - Fonts\n/// @access public\n/// @param {string} $fontFamily     [required]   - The name of the `font-family` property\n/// @param {string} $fileName       [required]   - Filename without extension and without path\n/// @param {string} $fontWeight     [false]      - The defined `font-weight` for the `font-family` rule\n/// @param {string} $retinaFileName [false]      - The name of the `font-family` property used on retina screens\n/// @param {string} $path           [$path-font] - The path of the font file, by default is `$path-font` core var used in theme `config.scss`\n/// @example scss Default usage, it generates a `@font-face` declaration which can support Bulletproof @font-face Syntax or can load a `ttf` file only depending by `$use-font-fallback` boolean var\n///   @include font('family name', 'FontFile', 400);\n/// @example css CSS generated\n/// \\@font-face {\n///   font-family: \"family name\";\n///   font-weight: 400;\n///   src: url(\"production/img/theme/fonts/FontFile.eot?#iefix\") format(\"embedded-opentype\"), url(\"production/img/theme/fonts/FontFile.woff2\") format(\"woff2\"), url(\"production/img/theme/fonts/FontFile.woff\") format(\"woff\"), url(\"production/img/theme/fonts/FontFile.ttf\") format(\"truetype\"), url(\"production/img/theme/fonts/FontFile.svgfamily name\") format(\"svg\");\n/// }\n/// @example scss Default usage, it generates a `@font-face` declaration which changes font family depending if the pixel density is retina or not and with custom font path\n///   @include font('family name', 'FontFile', 500, 'RetinaFontFile', '/path/to/fonts/');\n/// @example css CSS generated\n/// \\@media only screen and (-webkit-max-device-pixel-ratio: 1) and (aspect-ratio: 1), only screen and (-webkit-max-device-pixel-ratio: 1), only screen and (max--moz-device-pixel-ratio: 1), only screen and (-o-max-device-pixel-ratio: 1 / 11), only screen and (max-device-pixel-ratio: 1), only screen and (max-resolution: 1dppx) {\n///   \\@font-face {\n///     font-family: \"family name\";\n///     font-weight: 500;\n///     src: url(\"/path/to/fonts/FontFile.eot?#iefix\") format(\"embedded-opentype\"), url(\"/path/to/fonts/FontFile.woff2\") format(\"woff2\"), url(\"/path/to/fonts/FontFile.woff\") format(\"woff\"), url(\"/path/to/fonts/FontFile.ttf\") format(\"truetype\"), url(\"/path/to/fonts/FontFile.svgfamily name\") format(\"svg\");\n///   }\n/// }\n/// \\@media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-moz-min-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2 / 1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx) {\n///   \\@font-face {\n///     font-family: \"family name\";\n///     font-weight: 500;\n///     src: url(\"/path/to/fonts/RetinaFontFile.eot?#iefix\") format(\"embedded-opentype\"), url(\"/path/to/fonts/RetinaFontFile.woff2\") format(\"woff2\"), url(\"/path/to/fonts/RetinaFontFile.woff\") format(\"woff\"), url(\"/path/to/fonts/RetinaFontFile.ttf\") format(\"truetype\"), url(\"/path/to/fonts/RetinaFontFile.svgfamily name\") format(\"svg\");\n///   }\n/// }\n\n@mixin font($fontFamily, $fileName, $fontWeight:false, $retinaFileName:false, $path:$path-font) {\n\n    @if ($retinaFileName == false) {\n        @include _font($fontFamily, $fileName, $fontWeight, $path, false);\n    } @else {\n        // WARNING\n        // using retina alternative family will not work if you load fonts from google too\n        // so comment this on the header and load fonts locally\n        // <!--link href='http://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,700,300,400' rel='stylesheet' type='text/css'-->\n        @media #{$display-standard} {\n            @include _font($fontFamily, $fileName, $fontWeight, $path, false);\n        }\n        @media #{$display-retina} {\n            @include _font($fontFamily, $retinaFileName, $fontWeight, $path, false);\n        }\n    }\n}\n\n/// Generates a font rule that loads a font file directly\n/// @author <a href=\"http://twitter.com/vttrx\">Vittorio Vittori</a>\n/// @group Helpers - Fonts\n/// @access public\n/// @param {string} $fontFamily     [required]   - The name of the `font-family` property\n/// @param {string} $fileName       [required]   - Filename with extension and without path\n/// @param {string} $fontWeight     [false]      - The defined `font-weight` for the `font-family` rule\n/// @param {string} $format         [truetype]   - The format propery\n/// @param {string} $retinaFileName [false]      - The name of the `font-family` property used on retina screens\n/// @param {string} $path           [$path-font] - The path of the font file, by default is `$path-font` core var used in theme `config.scss`\n/// @example scss Default usage, it generates a `@font-face` declaration\n///   @include fontFile('family name', 'FullFontFileName.ttf', 400);\n/// @example css CSS generated\n///  \\@font-face {\n///   font-family: \"another family name\";\n///   font-weight: 400;\n///   src: url(\"production/img/theme/fonts/FullFontFileName.ttf\") format(\"truetype\");\n/// }\n/// @example scss Default usage, it generates a `@font-face` declaration\n///   @include fontFile('another family name', 'FullFontFileName.ttf', 700, 'truetype', 'RetinaFullFontFileName.ttf', '/path/to/fonts/');\n/// @example css CSS generated\n///  \\@media only screen and (-webkit-max-device-pixel-ratio: 1) and (aspect-ratio: 1), only screen and (-webkit-max-device-pixel-ratio: 1), only screen and (max--moz-device-pixel-ratio: 1), only screen and (-o-max-device-pixel-ratio: 1 / 11), only screen and (max-device-pixel-ratio: 1), only screen and (max-resolution: 1dppx) {\n///   @font-face {\n///     font-family: \"another family name\";\n///     font-weight: 700;\n///     src: url(\"/path/to/fonts/FullFontFileName.ttf\") format(\"truetype\");\n///   }\n/// }\n/// \\@media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-moz-min-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2 / 1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx) {\n///   @font-face {\n///     font-family: \"another family name\";\n///     font-weight: 700;\n///     src: url(\"/path/to/fonts/RetinaFullFontFileName.ttf\") format(\"truetype\");\n///   }\n/// }\n\n@mixin fontFile($fontFamily, $fileName, $fontWeight:false, $format:\"truetype\", $retinaFileName:false, $path:$path-font) {\n\n    @if ($retinaFileName == false) {\n        @include _font($fontFamily, $fileName, $fontWeight, $path, $format);\n    } @else {\n        // WARNING\n        // using retina alternative family will not work if you load fonts from google too\n        // so comment this on the header and load fonts locally\n        // <!--link href='http://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,700,300,400' rel='stylesheet' type='text/css'-->\n        @media #{$display-standard} {\n            @include _font($fontFamily, $fileName, $fontWeight, $path, $format);\n        }\n        @media #{$display-retina} {\n            @include _font($fontFamily, $retinaFileName, $fontWeight, $path, $format);\n        }\n    }\n}\n\n@mixin _font($fontFamily, $fileName, $fontWeight, $path, $format:false) {\n    @font-face {\n        font-family: $fontFamily;\n        @if ($fontWeight) {\n            font-weight: $fontWeight;\n        }\n        @include _loadFont($fileName, $fontFamily, $path, $format);\n    }\n}\n\n@mixin _loadFont($fileName, $fontFamily, $path, $format) {\n    @if $format == false {\n        @if $use-font-fallback {\n            src: url('#{$path}#{$fileName}.eot?#iefix') format('embedded-opentype'),\n                 url('#{$path}#{$fileName}.woff2') format('woff2'),\n                 url('#{$path}#{$fileName}.woff') format('woff'),\n                 url('#{$path}#{$fileName}.ttf') format('truetype'),\n                 url('#{$path}#{$fileName}.svg#{$fontFamily}') format('svg');\n        } @else {\n            src: url('#{$path}#{$fileName}.ttf') format('truetype');\n        }\n    } @else {\n        src: url('#{$path}#{$fileName}') format('#{$format}');\n    }\n}\n","\n@include fontFile('karla', 'Karla-Bold.ttf', 600);\n@include fontFile('karla', 'Karla-Regular.ttf', 400);\n@include fontFile('bitter', 'Bitter-Bold.ttf', 600);\n\n@include globalSelection($color-gold, rgba($color-gold, 0.25));\n@include addViewportsSteps('miniml--limit', 1280px, 1024px, 1024px);\n","@mixin globalSelection($textColor:inherit, $backgroundColor:inherit, $fallbackBackgroundColor:$backgroundColor) {\n    // Sets the color of the text selection area and the color of the text selected\n    @if $use-css-prefix == true {\n        ::-moz-selection {\n            @include fallbackColor(\"background-color\", $backgroundColor, $fallbackBackgroundColor);\n            color: $textColor;\n        }\n        img::-moz-selection    {\n            background-color: transparent;\n        }\n        ::-moz-focus-inner {\n            border: 0;\n        }\n    }\n    ::selection {\n        @include fallbackColor(\"background-color\", $backgroundColor, $fallbackBackgroundColor);\n        color: $textColor;\n    }\n    img::selection {\n        background-color: transparent;\n    }\n}\n\n@mixin selection($textColor:inherit, $backgroundColor:inherit, $fallbackBackgroundColor:$backgroundColor) {\n    // Sets the color of the text selection area and the color of the text selected\n    @if $use-css-prefix == true {\n        &::-moz-selection {\n            @include fallbackColor(\"background-color\", $backgroundColor, $fallbackBackgroundColor);\n            color: $textColor;\n        }\n        &::-moz-focus-inner {\n            border: 0;\n        }\n    }\n    &::selection {\n        @include fallbackColor(\"background-color\", $backgroundColor, $fallbackBackgroundColor);\n        color: $textColor;\n    }\n}\n","@mixin fallbackColor($property, $color, $fallbackColor: $color){\n    @if $use-fallbacks == true {\n        @if alpha($fallbackColor) == 0 {\n            #{$property}: transparent;\n        } @elseif alpha($fallbackColor) > 0 {\n            #{$property}: rgb(red($fallbackColor), green($fallbackColor), blue($fallbackColor));\n        }\n    }\n    #{$property}: $color;\n}\n\n@mixin fallbackBackgroundSize($backgroundSize, $backgroundSizeAlt:false, $backgroundPosition: 50% 50%) {\n    @if $use-fallbacks == true and $backgroundSizeAlt != false {\n        background-position: $backgroundPosition;\n        background-size: $backgroundSizeAlt;\n    }\n\n    background-size: $backgroundSize;\n}\n","@function _important(){\n    @if $state-important == true{\n        @return (\"!important\");\n    }\n    @else{\n        @return (\"\");\n    }\n}\n\n@mixin _addStep($selector:step, $width:false) {\n    @if $width == false {\n        .#{$selector} {\n            display: block;\n            margin-left: auto;\n            margin-right: auto;\n            @if $use-core-base == false {\n                @include box-sizing(\"border-box\");\n            }\n        }\n    }\n    @else{\n        .#{$selector} {\n            display: block;\n            width: $width;\n            margin-left: auto;\n            margin-right: auto;\n            @if $use-core-base == false {\n                @include box-sizing(\"border-box\");\n            }\n        }\n    }\n}\n","/// Generates a container selector to create a centered column site\n/// @author <a href=\"http://twitter.com/vttrx\">Vittorio Vittori</a>\n/// @group Sizing\n/// @access public\n/// @param {string} $selector - The name of the container element selector\n/// @example scss Code to be put on app.scss\n///     @include addViewportsSteps(use-steps, 1600px, 1024px, 0, 0);\n/// @example css The CSS generated\n///     .use-steps {\n///      display: block;\n///      margin-left: auto;\n///      margin-right: auto;\n///    }\n///    @media only screen and (min-width: 768px), only print {\n///      .use-steps {\n///        max-width: 0;\n///      }\n///    }\n///    @media only screen and (min-width: 1024px) {\n///      .use-steps {\n///        max-width: 0;\n///      }\n///    }\n///    @media only screen and (min-width: 1280px) {\n///      .use-steps {\n///        max-width: 1024px;\n///      }\n///    }\n///    @media only screen and (min-width: 1800px) {\n///      .use-steps {\n///        max-width: 1600px;\n///      }\n///    }\n\n@mixin addViewportsSteps(\n    $selector             : \"with-steps\",\n    $hdFullWidth          : 0,\n    $hdReadyWidth         : 0,\n    $tabletLandscapeWidth : 0,\n    $tabletPortraitWidth  : 0\n    ) {\n\n    @include _addStep($selector, 100%);\n\n    @include _addViewportsSteps($from-tablet-portrait,  $selector, $tablet-portrait-step,  $tabletPortraitWidth);\n    @include _addViewportsSteps($from-tablet-landscape, $selector, $tablet-landscape-step, $tabletLandscapeWidth);\n    @include _addViewportsSteps($from-hd-ready,         $selector, $hd-ready-step,         $hdReadyWidth);\n    @include _addViewportsSteps($from-hd-full,          $selector, $hd-full-step,          $hdFullWidth);\n}\n\n@mixin _addViewportsSteps($viewportRule, $selector, $viewportWidth, $width) {\n    $width: _clean($width);\n    @if $width != 0 {\n        @media #{$viewportRule} {\n            .#{$selector} {\n                @if $width <= $viewportWidth {\n                    max-width : $width;\n                } @else {\n                    max-width : $viewportWidth;\n                }\n            }\n        }\n    }\n}\n"],"sourceRoot":"/source/"}