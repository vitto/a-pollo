[{"data":"$bem-element: '__' !default;\n$bem-modifier: '--' !default;\n$-bem-block-name: '' !default;\n\n@mixin -bem-check-wrapper {\n  @if $-bem-block-name == '' {\n    @error 'You must wrap this mixin inside block mixin wrapper';\n  }\n}\n\n@mixin block ($block-name) {\n  $-bem-block-name: '.#{$block-name}' !global;\n\n  #{$-bem-block-name} {\n    @content;\n  }\n  $-bem-block-name: '' !global;\n}\n\n@mixin element ($element-name) {\n  $element-name: #{$bem-element}#{$element-name};\n  @include -bem-check-wrapper;\n\n  @if str-index(inspect(&), $bem-element) {\n    & #{$-bem-block-name}#{$element-name} {\n      @content;\n    }\n  } @else if  str-index(inspect(&), ':hover') {\n    & #{$-bem-block-name}#{$element-name} {\n      @content;\n    }\n  } @else {\n    @at-root &#{$element-name} {\n      @content;\n    }\n  }\n}\n\n@mixin modifier ($modifier-name) {\n  $modifier-name: #{$bem-modifier}#{$modifier-name};\n  @include -bem-check-wrapper;\n\n  @if str-index(inspect(&), ':hover') {\n    $element-name: str-replace(nth(str-explode(inspect(&), ':'), 1), '(', '');\n    $length: length(str-explode(inspect(&), ' '));\n\n    @if $length >= 2 {\n      @at-root &#{$modifier-name} {\n        $parent: &;\n        @content;\n      }\n    } @else {\n      $element-name: nth($element-name, 1);\n\n      &#{$element-name}#{$modifier-name} {\n        @content;\n      }\n    }\n  } @else {\n    &#{$modifier-name} {\n      @content;\n    }\n  }\n}\n\n/*\n  @a-pollo\n  @auth: Vittorio Vittori\n  @category: BEM\n  @code: Example on using the mixin with some static property\n    @include block (button) {\n      background: #3f6c44;\n      color: #fff;\n      display: inline-block;\n      font-size: 12px;\n      padding: 4px 8px;\n    }\n  @css: This is the CSS generated\n    .button {\n      background: #3f6c44;\n      color: #fff;\n      display: inline-block;\n      font-size: 12px;\n      padding: 4px 8px;\n    }\n  @date: 2016-12-28T17:40:42+01:00\n  @doc: mixin\n  @html: A simple HTML element to see how mixin works\n    <a class=\"button\" href=\"#\">Visit this link</a>\n  @icon: fa fa-css3\n  @name: block\n  @param: {string} ($block-name) [required]\n          Defines the block name of the BEM component\n  @public: true\n  @returns: css\n  @text: Defines the block name of the BEM component. This mixin is required as wrapper of `element` and `modifier` mixins\n  @version: 4.0.0\n*/\n\n/*\n  @a-pollo\n  @auth: Vittorio Vittori\n  @category: BEM\n  @code: You must wrap `element` mixin inside `block` mixin\n    @include block (button) {\n      background: #3f6c44;\n      display: inline-block;\n      padding: 4px 8px;\n\n      @include element (text) {\n        color: #fff;\n        font-size: 12px;\n      }\n    }\n  @css: The CSS generated will keep everything on 1 class level deep\n    .button {\n      background: #3f6c44;\n      display: inline-block;\n      padding: 4px 8px;\n    }\n    .button__text {\n      color: #fff;\n      font-size: 12px;\n    }\n  @date: 2016-12-28T18:09:00+01:00\n  @doc: mixin\n  @html: Elements should be inside a parent block\n    <a class=\"button\" href=\"#\">\n      <span class=\"button__text\">Visit this link</span>\n    </a>\n  @icon: fa fa-css3\n  @name: element\n  @param: {string} ($element-name) [required]\n          Defines the element name of the BEM component\n  @public: true\n  @returns: css\n  @text: Defines the element name of the BEM component. This mixin is required as wrapped inside `block` mixin\n  @version: 4.0.0\n*/\n\n/*\n  @a-pollo\n  @auth: Vittorio Vittori\n  @category: BEM\n  @code: Modifiers can be applied to `block` or `element` mixins\n    @include block (button) {\n      background: #3f6c44;\n      color: #fff;\n      display: inline-block;\n      font-size: 12px;\n      padding: 4px 8px;\n\n      @include modifier (error) {\n        background: #f02052;\n      }\n    }\n  @css:\n    .button {\n      background: #3f6c44;\n      color: #fff;\n      display: inline-block;\n      font-size: 12px;\n      padding: 4px 8px;\n    }\n    .button--error {\n      background: #f02052;\n    }\n  @date: 2016-12-28T18:09:00+01:00\n  @doc: mixin\n  @html: Remember to keep the modifier's original block or element selector\n    <a class=\"button button--error\" href=\"#\">Click here to report the error</a>\n  @icon: fa fa-css3\n  @name: modifier\n  @param: {string} ($modifier-name) [required]\n          Defines the modifier name of the BEM component\n  @public: true\n  @returns: css\n  @text: Defines the modifier name of the BEM component. This mixin is required as wrapped inside `block` mixin\n  @version: 4.0.0\n*/\n","path":"/Users/vitto/repo/a-pollo/test/samples/sass/frontsize/core/components/bem.scss"}]